{"version":3,"file":"DonutChart.js","sources":["../src/hooks/useOnClickInternal.ts","../src/internal/defaults.ts","../src/internal/staticProps.ts","../src/components/PieChart/PieChart.tsx","../src/components/DonutChart/DonutChart.tsx"],"sourcesContent":["import { enrichEventWithDetails } from '@ui5/webcomponents-react-base/dist/Utils';\nimport { useCallback } from 'react';\n\nexport const useOnClickInternal = (onClick) =>\n  useCallback(\n    (payload, event) => {\n      if (typeof onClick === 'function') {\n        onClick(\n          enrichEventWithDetails(event, {\n            payload: payload?.activePayload?.[0]?.payload,\n            activePayloads: payload?.activePayload\n          })\n        );\n      }\n    },\n    [onClick]\n  );\n","export const defaultFormatter = (d) => d;\n\nexport const defaultMaxYAxisWidth = 200;\n","import { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\n\nexport const tickLineConfig = { stroke: 'transparent' };\nexport const tooltipContentStyle = { backgroundColor: ThemingParameters.sapBackgroundColor };\nexport const tooltipFillOpacity: any = { fillOpacity: 0.3 }; // we need type any due to recharts typing error\nexport const xAxisPadding = { left: 25, right: 25 };\n","import { useConsolidatedRef } from '@ui5/webcomponents-react-base/dist/useConsolidatedRef';\nimport { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/dist/usePassThroughHtmlProps';\nimport { enrichEventWithDetails } from '@ui5/webcomponents-react-base/dist/Utils';\nimport { ChartContainer } from '@ui5/webcomponents-react-charts/dist/components/ChartContainer';\nimport { PieChartPlaceholder } from '@ui5/webcomponents-react-charts/dist/PieChartPlaceholder';\nimport { useLegendItemClick } from '@ui5/webcomponents-react-charts/dist/useLegendItemClick';\nimport React, { cloneElement, CSSProperties, FC, forwardRef, isValidElement, Ref, useCallback, useMemo } from 'react';\nimport { Cell, Label, Legend, Pie, PieChart as PieChartLib, Sector, Text, Tooltip } from 'recharts';\nimport { getValueByDataKey } from 'recharts/lib/util/ChartUtils';\nimport { useOnClickInternal } from '../../hooks/useOnClickInternal';\nimport { IChartBaseProps } from '../../interfaces/IChartBaseProps';\nimport { IChartDimension } from '../../interfaces/IChartDimension';\nimport { IChartMeasure } from '../../interfaces/IChartMeasure';\nimport { IPolarChartConfig } from '../../interfaces/IPolarChartConfig';\nimport { defaultFormatter } from '../../internal/defaults';\nimport { tooltipContentStyle, tooltipFillOpacity } from '../../internal/staticProps';\n\ninterface MeasureConfig extends Omit<IChartMeasure, 'accessor' | 'label' | 'color' | 'hideDataLabel'> {\n  /**\n   * A string containing the path to the dataset key this pie should display.\n   * Supports object structures by using `'parent.child'`. Can also be a getter.\n   */\n  accessor: string;\n  /**\n   * array of any valid CSS Color or CSS Variable. Defaults to the `sapChart_OrderedColor_` colors\n   */\n  colors?: CSSProperties['color'][];\n  /**\n   * Flag whether the data labels should be hidden in the chart for this segment.\n   * When passed a function it will be called for each data label with the corresponding chart properties.\n   */\n  hideDataLabel?: boolean | ((chartConfig: any) => boolean);\n}\n\nexport interface PieChartProps extends IChartBaseProps<IPolarChartConfig> {\n  /**\n   * A label to display in the center of the `PieChart`.\n   * If you use this prop to display a text, we recommend to increase `chartConfig.innerRadius` to have some free\n   * space for the text.\n   */\n  centerLabel?: string;\n  /**\n   * A object which contains the configuration of the dimension.\n   *\n   * #### Required Properties\n   * - `accessor`: string containing the path to the dataset key the dimension should display. Supports object structures by using <code>'parent.child'</code>.\n   *   Can also be a getter.\n   *\n   * #### Optional Properties\n   * - `formatter`: function will be called for each data label and allows you to format it according to your needs\n   *\n   */\n  dimension: IChartDimension;\n  /**\n   * A object which contains the configuration of the measure. The object is defining one pie in the chart.\n   *\n   * #### Required properties\n   * - `accessor`: string containing the path to the dataset key this pie should display. Supports object structures by using <code>'parent.child'</code>.\n   *\n   * #### Optional properties\n   *\n   * - `formatter`: function will be called for each data label and allows you to format it according to your needs\n   * - `DataLabel`: a custom component to be used for the data label\n   * - `colors`: array of any valid CSS Color or CSS Variable. Defaults to the `sapChart_OrderedColor_` colors\n   * - `hideDataLabel`: flag whether the data labels should be hidden in the chart for this segment. When passed a function it will be called for each data label with the corresponding chart properties.\n   */\n  measure: MeasureConfig;\n}\n\nconst tooltipItemDefaultStyle = { color: 'var (--sapTextColor)' };\n\n/**\n * A Pie Chart is a type of graph that displays data in a circular graph.\n * The pieces of the graph are proportional to the fraction of the whole in each category.\n *\n * In other words, each slice of the pie is relative to the size of that category in the group as a whole.\n * The entire “pie” represents 100 percent of a whole, while the pie “slices” represent portions of the whole.\n */\nconst PieChart: FC<PieChartProps> = forwardRef((props: PieChartProps, ref: Ref<HTMLDivElement>) => {\n  const {\n    loading,\n    dataset,\n    noLegend,\n    noAnimation,\n    tooltipConfig,\n    onDataPointClick,\n    onLegendClick,\n    onClick,\n    centerLabel,\n    style,\n    className,\n    tooltip,\n    slot,\n    ChartPlaceholder\n  } = props;\n\n  const chartConfig = useMemo(() => {\n    return {\n      margin: { right: 30, left: 30, bottom: 30, top: 30, ...(props.chartConfig?.margin ?? {}) },\n      legendPosition: 'bottom',\n      legendHorizontalAlign: 'center',\n      paddingAngle: 0,\n      outerRadius: '80%',\n      resizeDebounce: 250,\n      tooltipItemStyle: tooltipItemDefaultStyle,\n      ...props.chartConfig\n    };\n  }, [props.chartConfig]);\n\n  const showActiveSegmentDataLabel = chartConfig.showActiveSegmentDataLabel ?? true;\n\n  const dimension: IChartDimension = useMemo(\n    () => ({\n      formatter: defaultFormatter,\n      ...props.dimension\n    }),\n    [props.dimension]\n  );\n\n  const measure: MeasureConfig = useMemo(\n    () => ({\n      formatter: defaultFormatter,\n      ...props.measure\n    }),\n    [props.measure]\n  );\n\n  const dataLabel = useCallback(\n    (props) => {\n      const hideDataLabel =\n        typeof measure.hideDataLabel === 'function' ? measure.hideDataLabel(props) : measure.hideDataLabel;\n      if (hideDataLabel || chartConfig.activeSegment === props.index) return null;\n\n      if (isValidElement(measure.DataLabel)) {\n        return cloneElement(measure.DataLabel, { ...props, config: measure });\n      }\n\n      return (\n        <Text {...props} alignmentBaseline=\"middle\" className=\"recharts-pie-label-text\">\n          {measure.formatter(props.value)}\n        </Text>\n      );\n    },\n    [measure, chartConfig.activeSegment]\n  );\n\n  const tooltipValueFormatter = useCallback(\n    (value, name) => [measure.formatter(value), dimension.formatter(name)],\n    [measure.formatter, dimension.formatter]\n  );\n  const chartRef = useConsolidatedRef<any>(ref);\n\n  const onItemLegendClick = useLegendItemClick(onLegendClick, () => measure.accessor);\n  const onClickInternal = useOnClickInternal(onClick);\n\n  const onDataPointClickInternal = useCallback(\n    (payload, dataIndex, event) => {\n      if (payload && payload && typeof onDataPointClick === 'function') {\n        onDataPointClick(\n          enrichEventWithDetails(event, {\n            value: payload.value,\n            dataKey: payload.tooltipPayload?.[0]?.dataKey,\n            name: payload.name,\n            payload: payload.payload,\n            dataIndex\n          })\n        );\n      }\n    },\n    [onDataPointClick]\n  );\n\n  const renderActiveShape = useCallback(\n    (props) => {\n      const RADIAN = Math.PI / 180;\n      const { cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle, fill, payload, percent, value } = props;\n      const sin = Math.sin(-RADIAN * midAngle);\n      const cos = Math.cos(-RADIAN * midAngle);\n      const sx = cx + (outerRadius + 10) * cos;\n      const sy = cy + (outerRadius + 10) * sin;\n      const mx = cx + (outerRadius + 30) * cos;\n      const my = cy + (outerRadius + 30) * sin;\n      const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n      const ey = my;\n      const textAnchor = cos >= 0 ? 'start' : 'end';\n\n      return (\n        <g>\n          <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n            {payload.name}\n          </text>\n          <Sector\n            cx={cx}\n            cy={cy}\n            innerRadius={innerRadius}\n            outerRadius={outerRadius}\n            startAngle={startAngle}\n            endAngle={endAngle}\n            fill={fill}\n          />\n          <Sector\n            cx={cx}\n            cy={cy}\n            startAngle={startAngle}\n            endAngle={endAngle}\n            innerRadius={outerRadius + 6}\n            outerRadius={outerRadius + 10}\n            fill={fill}\n          />\n          {showActiveSegmentDataLabel && (\n            <>\n              <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\n              <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n              <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill={fill}>\n                {measure.formatter(value)}\n              </text>\n              <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={18} textAnchor={textAnchor} fill={fill}>\n                {`(${(percent * 100).toFixed(2)}%)`}\n              </text>\n            </>\n          )}\n        </g>\n      );\n    },\n    [showActiveSegmentDataLabel]\n  );\n\n  const renderLabelLine = useCallback(\n    (props) => {\n      const hideDataLabel =\n        typeof measure.hideDataLabel === 'function' ? measure.hideDataLabel(props) : measure.hideDataLabel;\n      if (hideDataLabel || chartConfig.activeSegment === props.index) return null;\n      return Pie.renderLabelLineItem(undefined, props);\n    },\n    [chartConfig.activeSegment, measure.hideDataLabel]\n  );\n\n  const legendWrapperStyle = useMemo(() => {\n    if (chartConfig.activeSegment != null && showActiveSegmentDataLabel) {\n      if (chartConfig.legendPosition === 'bottom') {\n        return {\n          paddingTop: '30px'\n        };\n      } else if (chartConfig.legendPosition === 'top') {\n        return {\n          paddingBottom: '30px'\n        };\n      }\n    }\n\n    return null;\n  }, [showActiveSegmentDataLabel, chartConfig.activeSegment, chartConfig.legendPosition]);\n\n  const passThroughProps = usePassThroughHtmlProps(props, ['onDataPointClick', 'onLegendClick', 'onClick']);\n\n  return (\n    <ChartContainer\n      dataset={dataset}\n      ref={chartRef}\n      loading={loading}\n      Placeholder={ChartPlaceholder ?? PieChartPlaceholder}\n      style={style}\n      className={className}\n      tooltip={tooltip}\n      slot={slot}\n      resizeDebounce={chartConfig.resizeDebounce}\n      {...passThroughProps}\n    >\n      <PieChartLib\n        onClick={onClickInternal}\n        margin={chartConfig.margin}\n        className={\n          typeof onDataPointClick === 'function' || typeof onClick === 'function' ? 'has-click-handler' : undefined\n        }\n      >\n        {/*\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore*/}\n        <Pie\n          onClick={onDataPointClickInternal}\n          innerRadius={chartConfig.innerRadius}\n          outerRadius={chartConfig.outerRadius}\n          paddingAngle={chartConfig.paddingAngle}\n          nameKey={dimension.accessor}\n          dataKey={measure.accessor}\n          data={dataset}\n          animationBegin={0}\n          isAnimationActive={noAnimation === false}\n          labelLine={renderLabelLine}\n          label={dataLabel}\n          activeIndex={chartConfig.activeSegment}\n          activeShape={chartConfig.activeSegment != null && renderActiveShape}\n        >\n          {centerLabel && <Label position=\"center\">{centerLabel}</Label>}\n          {dataset &&\n            dataset.map((data, index) => (\n              <Cell\n                key={index}\n                name={dimension.formatter(getValueByDataKey(data, dimension.accessor, ''))}\n                fill={measure.colors?.[index] ?? `var(--sapChart_OrderedColor_${(index % 11) + 1})`}\n              />\n            ))}\n        </Pie>\n        <Tooltip\n          cursor={tooltipFillOpacity}\n          formatter={tooltipValueFormatter}\n          contentStyle={tooltipContentStyle}\n          itemStyle={chartConfig.tooltipItemStyle}\n          labelStyle={chartConfig.tooltipLabelStyle}\n          {...tooltipConfig}\n        />\n        {!noLegend && (\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          <Legend\n            verticalAlign={chartConfig.legendPosition}\n            align={chartConfig.legendHorizontalAlign}\n            onClick={onItemLegendClick}\n            wrapperStyle={legendWrapperStyle}\n          />\n        )}\n        {props.children}\n      </PieChartLib>\n    </ChartContainer>\n  );\n});\n\nPieChart.defaultProps = {\n  noLegend: false,\n  noAnimation: false\n};\n\nPieChart.displayName = 'PieChart';\n\nexport { PieChart };\n","import React, { FC, forwardRef, useMemo } from 'react';\nimport { PieChart, PieChartProps } from '../PieChart/PieChart';\n\n/**\n * A `DonutChart` is a type of graph that displays data in a circular graph with a cut-out hole in the middle.\n * The pieces of the graph are proportional to the fraction of the whole in each category.\n * A `DonutChart` is basically a `PieChart` with a hole.\n */\nconst DonutChart: FC<PieChartProps> = forwardRef((props: PieChartProps, ref) => {\n  const chartConfig = useMemo(() => {\n    return {\n      legendPosition: 'bottom',\n      paddingAngle: 0,\n      innerRadius: '50%',\n      ...props.chartConfig\n    };\n  }, [props.chartConfig]);\n\n  return <PieChart {...props} ref={ref} chartConfig={chartConfig} />;\n});\n\nDonutChart.displayName = 'DonutChart';\n\nexport { DonutChart };\n"],"names":["useOnClickInternal","onClick","useCallback","payload","event","enrichEventWithDetails","activePayload","activePayloads","defaultFormatter","d","tooltipContentStyle","backgroundColor","ThemingParameters","sapBackgroundColor","tooltipFillOpacity","fillOpacity","tooltipItemDefaultStyle","color","PieChart","forwardRef","props","ref","loading","dataset","noLegend","noAnimation","tooltipConfig","onDataPointClick","onLegendClick","centerLabel","style","className","tooltip","slot","ChartPlaceholder","chartConfig","useMemo","margin","right","left","bottom","top","legendPosition","legendHorizontalAlign","paddingAngle","outerRadius","resizeDebounce","tooltipItemStyle","showActiveSegmentDataLabel","dimension","formatter","measure","dataLabel","hideDataLabel","activeSegment","index","isValidElement","DataLabel","cloneElement","config","value","tooltipValueFormatter","name","chartRef","useConsolidatedRef","onItemLegendClick","useLegendItemClick","accessor","onClickInternal","onDataPointClickInternal","dataIndex","dataKey","tooltipPayload","renderActiveShape","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","startAngle","endAngle","fill","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","toFixed","renderLabelLine","Pie","renderLabelLineItem","undefined","legendWrapperStyle","paddingTop","paddingBottom","passThroughProps","usePassThroughHtmlProps","PieChartPlaceholder","PieChartLib","map","data","getValueByDataKey","colors","tooltipLabelStyle","children","defaultProps","displayName","DonutChart"],"mappings":";;;;;;;;;;;;;AAGO,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,OAAD;AAAA,SAChCC,WAAW,CACT,UAACC,OAAD,EAAUC,KAAV,EAAoB;AAClB,QAAI,OAAOH,OAAP,KAAmB,UAAvB,EAAmC;AAAA;;AACjCA,MAAAA,OAAO,CACLI,sBAAsB,CAACD,KAAD,EAAQ;AAC5BD,QAAAA,OAAO,EAAEA,OAAF,aAAEA,OAAF,gDAAEA,OAAO,CAAEG,aAAX,oFAAE,sBAAyB,CAAzB,CAAF,2DAAE,uBAA6BH,OADV;AAE5BI,QAAAA,cAAc,EAAEJ,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEG;AAFG,OAAR,CADjB,CAAP;AAMD;AACF,GAVQ,EAWT,CAACL,OAAD,CAXS,CADqB;AAAA,CAA3B;;ACHA,IAAMO,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,CAAD;AAAA,SAAOA,CAAP;AAAA,CAAzB;;ACGA,IAAMC,mBAAmB,GAAG;AAAEC,EAAAA,eAAe,EAAEC,iBAAiB,CAACC;AAArC,CAA5B;AACA,IAAMC,kBAAuB,GAAG;AAAEC,EAAAA,WAAW,EAAE;AAAf,CAAhC;;ACiEP,IAAMC,uBAAuB,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAhC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,QAA2B,gBAAGC,UAAU,CAAC,UAACC,KAAD,EAAuBC,GAAvB,EAAoD;AAAA;;AACjG,MACEC,OADF,GAeIF,KAfJ,CACEE,OADF;AAAA,MAEEC,OAFF,GAeIH,KAfJ,CAEEG,OAFF;AAAA,MAGEC,QAHF,GAeIJ,KAfJ,CAGEI,QAHF;AAAA,MAIEC,WAJF,GAeIL,KAfJ,CAIEK,WAJF;AAAA,MAKEC,aALF,GAeIN,KAfJ,CAKEM,aALF;AAAA,MAMEC,gBANF,GAeIP,KAfJ,CAMEO,gBANF;AAAA,MAOEC,aAPF,GAeIR,KAfJ,CAOEQ,aAPF;AAAA,MAQE3B,OARF,GAeImB,KAfJ,CAQEnB,OARF;AAAA,MASE4B,WATF,GAeIT,KAfJ,CASES,WATF;AAAA,MAUEC,KAVF,GAeIV,KAfJ,CAUEU,KAVF;AAAA,MAWEC,SAXF,GAeIX,KAfJ,CAWEW,SAXF;AAAA,MAYEC,OAZF,GAeIZ,KAfJ,CAYEY,OAZF;AAAA,MAaEC,IAbF,GAeIb,KAfJ,CAaEa,IAbF;AAAA,MAcEC,gBAdF,GAeId,KAfJ,CAcEc,gBAdF;AAiBA,MAAMC,WAAW,GAAGC,OAAO,CAAC,YAAM;AAAA;;AAChC;AACEC,MAAAA,MAAM;AAAIC,QAAAA,KAAK,EAAE,EAAX;AAAeC,QAAAA,IAAI,EAAE,EAArB;AAAyBC,QAAAA,MAAM,EAAE,EAAjC;AAAqCC,QAAAA,GAAG,EAAE;AAA1C,wDAAkDrB,KAAK,CAACe,WAAxD,uDAAkD,mBAAmBE,MAArE,yEAA+E,EAA/E,CADR;AAEEK,MAAAA,cAAc,EAAE,QAFlB;AAGEC,MAAAA,qBAAqB,EAAE,QAHzB;AAIEC,MAAAA,YAAY,EAAE,CAJhB;AAKEC,MAAAA,WAAW,EAAE,KALf;AAMEC,MAAAA,cAAc,EAAE,GANlB;AAOEC,MAAAA,gBAAgB,EAAE/B;AAPpB,OAQKI,KAAK,CAACe,WARX;AAUD,GAX0B,EAWxB,CAACf,KAAK,CAACe,WAAP,CAXwB,CAA3B;AAaA,MAAMa,0BAA0B,4BAAGb,WAAW,CAACa,0BAAf,yEAA6C,IAA7E;AAEA,MAAMC,SAA0B,GAAGb,OAAO,CACxC;AAAA;AACEc,MAAAA,SAAS,EAAE1C;AADb,OAEKY,KAAK,CAAC6B,SAFX;AAAA,GADwC,EAKxC,CAAC7B,KAAK,CAAC6B,SAAP,CALwC,CAA1C;AAQA,MAAME,OAAsB,GAAGf,OAAO,CACpC;AAAA;AACEc,MAAAA,SAAS,EAAE1C;AADb,OAEKY,KAAK,CAAC+B,OAFX;AAAA,GADoC,EAKpC,CAAC/B,KAAK,CAAC+B,OAAP,CALoC,CAAtC;AAQA,MAAMC,SAAS,GAAGlD,WAAW,CAC3B,UAACkB,KAAD,EAAW;AACT,QAAMiC,aAAa,GACjB,OAAOF,OAAO,CAACE,aAAf,KAAiC,UAAjC,GAA8CF,OAAO,CAACE,aAAR,CAAsBjC,KAAtB,CAA9C,GAA6E+B,OAAO,CAACE,aADvF;AAEA,QAAIA,aAAa,IAAIlB,WAAW,CAACmB,aAAZ,KAA8BlC,KAAK,CAACmC,KAAzD,EAAgE,OAAO,IAAP;;AAEhE,sBAAIC,cAAc,CAACL,OAAO,CAACM,SAAT,CAAlB,EAAuC;AACrC,0BAAOC,YAAY,CAACP,OAAO,CAACM,SAAT,kCAAyBrC,KAAzB;AAAgCuC,QAAAA,MAAM,EAAER;AAAxC,SAAnB;AACD;;AAED,wBACE,oBAAC,IAAD,eAAU/B,KAAV;AAAiB,MAAA,iBAAiB,EAAC,QAAnC;AAA4C,MAAA,SAAS,EAAC;AAAtD,QACG+B,OAAO,CAACD,SAAR,CAAkB9B,KAAK,CAACwC,KAAxB,CADH,CADF;AAKD,GAf0B,EAgB3B,CAACT,OAAD,EAAUhB,WAAW,CAACmB,aAAtB,CAhB2B,CAA7B;AAmBA,MAAMO,qBAAqB,GAAG3D,WAAW,CACvC,UAAC0D,KAAD,EAAQE,IAAR;AAAA,WAAiB,CAACX,OAAO,CAACD,SAAR,CAAkBU,KAAlB,CAAD,EAA2BX,SAAS,CAACC,SAAV,CAAoBY,IAApB,CAA3B,CAAjB;AAAA,GADuC,EAEvC,CAACX,OAAO,CAACD,SAAT,EAAoBD,SAAS,CAACC,SAA9B,CAFuC,CAAzC;AAIA,MAAMa,QAAQ,GAAGC,kBAAkB,CAAM3C,GAAN,CAAnC;AAEA,MAAM4C,iBAAiB,GAAGC,kBAAkB,CAACtC,aAAD,EAAgB;AAAA,WAAMuB,OAAO,CAACgB,QAAd;AAAA,GAAhB,CAA5C;AACA,MAAMC,eAAe,GAAGpE,kBAAkB,CAACC,OAAD,CAA1C;AAEA,MAAMoE,wBAAwB,GAAGnE,WAAW,CAC1C,UAACC,OAAD,EAAUmE,SAAV,EAAqBlE,KAArB,EAA+B;AAC7B,QAAID,OAAO,IAAIA,OAAX,IAAsB,OAAOwB,gBAAP,KAA4B,UAAtD,EAAkE;AAAA;;AAChEA,MAAAA,gBAAgB,CACdtB,sBAAsB,CAACD,KAAD,EAAQ;AAC5BwD,QAAAA,KAAK,EAAEzD,OAAO,CAACyD,KADa;AAE5BW,QAAAA,OAAO,2BAAEpE,OAAO,CAACqE,cAAV,oFAAE,sBAAyB,CAAzB,CAAF,2DAAE,uBAA6BD,OAFV;AAG5BT,QAAAA,IAAI,EAAE3D,OAAO,CAAC2D,IAHc;AAI5B3D,QAAAA,OAAO,EAAEA,OAAO,CAACA,OAJW;AAK5BmE,QAAAA,SAAS,EAATA;AAL4B,OAAR,CADR,CAAhB;AASD;AACF,GAbyC,EAc1C,CAAC3C,gBAAD,CAd0C,CAA5C;AAiBA,MAAM8C,iBAAiB,GAAGvE,WAAW,CACnC,UAACkB,KAAD,EAAW;AACT,QAAMsD,MAAM,GAAGC,IAAI,CAACC,EAAL,GAAU,GAAzB;AACA,QAAQC,EAAR,GAA4GzD,KAA5G,CAAQyD,EAAR;AAAA,QAAYC,EAAZ,GAA4G1D,KAA5G,CAAY0D,EAAZ;AAAA,QAAgBC,QAAhB,GAA4G3D,KAA5G,CAAgB2D,QAAhB;AAAA,QAA0BC,WAA1B,GAA4G5D,KAA5G,CAA0B4D,WAA1B;AAAA,QAAuCnC,WAAvC,GAA4GzB,KAA5G,CAAuCyB,WAAvC;AAAA,QAAoDoC,UAApD,GAA4G7D,KAA5G,CAAoD6D,UAApD;AAAA,QAAgEC,QAAhE,GAA4G9D,KAA5G,CAAgE8D,QAAhE;AAAA,QAA0EC,IAA1E,GAA4G/D,KAA5G,CAA0E+D,IAA1E;AAAA,QAAgFhF,OAAhF,GAA4GiB,KAA5G,CAAgFjB,OAAhF;AAAA,QAAyFiF,OAAzF,GAA4GhE,KAA5G,CAAyFgE,OAAzF;AAAA,QAAkGxB,KAAlG,GAA4GxC,KAA5G,CAAkGwC,KAAlG;AACA,QAAMyB,GAAG,GAAGV,IAAI,CAACU,GAAL,CAAS,CAACX,MAAD,GAAUK,QAAnB,CAAZ;AACA,QAAMO,GAAG,GAAGX,IAAI,CAACW,GAAL,CAAS,CAACZ,MAAD,GAAUK,QAAnB,CAAZ;AACA,QAAMQ,EAAE,GAAGV,EAAE,GAAG,CAAChC,WAAW,GAAG,EAAf,IAAqByC,GAArC;AACA,QAAME,EAAE,GAAGV,EAAE,GAAG,CAACjC,WAAW,GAAG,EAAf,IAAqBwC,GAArC;AACA,QAAMI,EAAE,GAAGZ,EAAE,GAAG,CAAChC,WAAW,GAAG,EAAf,IAAqByC,GAArC;AACA,QAAMI,EAAE,GAAGZ,EAAE,GAAG,CAACjC,WAAW,GAAG,EAAf,IAAqBwC,GAArC;AACA,QAAMM,EAAE,GAAGF,EAAE,GAAG,CAACH,GAAG,IAAI,CAAP,GAAW,CAAX,GAAe,CAAC,CAAjB,IAAsB,EAAtC;AACA,QAAMM,EAAE,GAAGF,EAAX;AACA,QAAMG,UAAU,GAAGP,GAAG,IAAI,CAAP,GAAW,OAAX,GAAqB,KAAxC;AAEA,wBACE,4CACE;AAAM,MAAA,CAAC,EAAET,EAAT;AAAa,MAAA,CAAC,EAAEC,EAAhB;AAAoB,MAAA,EAAE,EAAE,CAAxB;AAA2B,MAAA,UAAU,EAAC,QAAtC;AAA+C,MAAA,IAAI,EAAEK;AAArD,OACGhF,OAAO,CAAC2D,IADX,CADF,eAIE,oBAAC,MAAD;AACE,MAAA,EAAE,EAAEe,EADN;AAEE,MAAA,EAAE,EAAEC,EAFN;AAGE,MAAA,WAAW,EAAEE,WAHf;AAIE,MAAA,WAAW,EAAEnC,WAJf;AAKE,MAAA,UAAU,EAAEoC,UALd;AAME,MAAA,QAAQ,EAAEC,QANZ;AAOE,MAAA,IAAI,EAAEC;AAPR,MAJF,eAaE,oBAAC,MAAD;AACE,MAAA,EAAE,EAAEN,EADN;AAEE,MAAA,EAAE,EAAEC,EAFN;AAGE,MAAA,UAAU,EAAEG,UAHd;AAIE,MAAA,QAAQ,EAAEC,QAJZ;AAKE,MAAA,WAAW,EAAErC,WAAW,GAAG,CAL7B;AAME,MAAA,WAAW,EAAEA,WAAW,GAAG,EAN7B;AAOE,MAAA,IAAI,EAAEsC;AAPR,MAbF,EAsBGnC,0BAA0B,iBACzB,uDACE;AAAM,MAAA,CAAC,aAAMuC,EAAN,cAAYC,EAAZ,cAAkBC,EAAlB,cAAwBC,EAAxB,cAA8BC,EAA9B,cAAoCC,EAApC,CAAP;AAAiD,MAAA,MAAM,EAAET,IAAzD;AAA+D,MAAA,IAAI,EAAC;AAApE,MADF,eAEE;AAAQ,MAAA,EAAE,EAAEQ,EAAZ;AAAgB,MAAA,EAAE,EAAEC,EAApB;AAAwB,MAAA,CAAC,EAAE,CAA3B;AAA8B,MAAA,IAAI,EAAET,IAApC;AAA0C,MAAA,MAAM,EAAC;AAAjD,MAFF,eAGE;AAAM,MAAA,CAAC,EAAEQ,EAAE,GAAG,CAACL,GAAG,IAAI,CAAP,GAAW,CAAX,GAAe,CAAC,CAAjB,IAAsB,EAApC;AAAwC,MAAA,CAAC,EAAEM,EAA3C;AAA+C,MAAA,UAAU,EAAEC,UAA3D;AAAuE,MAAA,IAAI,EAAEV;AAA7E,OACGhC,OAAO,CAACD,SAAR,CAAkBU,KAAlB,CADH,CAHF,eAME;AAAM,MAAA,CAAC,EAAE+B,EAAE,GAAG,CAACL,GAAG,IAAI,CAAP,GAAW,CAAX,GAAe,CAAC,CAAjB,IAAsB,EAApC;AAAwC,MAAA,CAAC,EAAEM,EAA3C;AAA+C,MAAA,EAAE,EAAE,EAAnD;AAAuD,MAAA,UAAU,EAAEC,UAAnE;AAA+E,MAAA,IAAI,EAAEV;AAArF,kBACO,CAACC,OAAO,GAAG,GAAX,EAAgBU,OAAhB,CAAwB,CAAxB,CADP,QANF,CAvBJ,CADF;AAqCD,GAnDkC,EAoDnC,CAAC9C,0BAAD,CApDmC,CAArC;AAuDA,MAAM+C,eAAe,GAAG7F,WAAW,CACjC,UAACkB,KAAD,EAAW;AACT,QAAMiC,aAAa,GACjB,OAAOF,OAAO,CAACE,aAAf,KAAiC,UAAjC,GAA8CF,OAAO,CAACE,aAAR,CAAsBjC,KAAtB,CAA9C,GAA6E+B,OAAO,CAACE,aADvF;AAEA,QAAIA,aAAa,IAAIlB,WAAW,CAACmB,aAAZ,KAA8BlC,KAAK,CAACmC,KAAzD,EAAgE,OAAO,IAAP;AAChE,WAAOyC,GAAG,CAACC,mBAAJ,CAAwBC,SAAxB,EAAmC9E,KAAnC,CAAP;AACD,GANgC,EAOjC,CAACe,WAAW,CAACmB,aAAb,EAA4BH,OAAO,CAACE,aAApC,CAPiC,CAAnC;AAUA,MAAM8C,kBAAkB,GAAG/D,OAAO,CAAC,YAAM;AACvC,QAAID,WAAW,CAACmB,aAAZ,IAA6B,IAA7B,IAAqCN,0BAAzC,EAAqE;AACnE,UAAIb,WAAW,CAACO,cAAZ,KAA+B,QAAnC,EAA6C;AAC3C,eAAO;AACL0D,UAAAA,UAAU,EAAE;AADP,SAAP;AAGD,OAJD,MAIO,IAAIjE,WAAW,CAACO,cAAZ,KAA+B,KAAnC,EAA0C;AAC/C,eAAO;AACL2D,UAAAA,aAAa,EAAE;AADV,SAAP;AAGD;AACF;;AAED,WAAO,IAAP;AACD,GAdiC,EAc/B,CAACrD,0BAAD,EAA6Bb,WAAW,CAACmB,aAAzC,EAAwDnB,WAAW,CAACO,cAApE,CAd+B,CAAlC;AAgBA,MAAM4D,gBAAgB,GAAGC,uBAAuB,CAACnF,KAAD,EAAQ,CAAC,kBAAD,EAAqB,eAArB,EAAsC,SAAtC,CAAR,CAAhD;AAEA,sBACE,oBAAC,cAAD;AACE,IAAA,OAAO,EAAEG,OADX;AAEE,IAAA,GAAG,EAAEwC,QAFP;AAGE,IAAA,OAAO,EAAEzC,OAHX;AAIE,IAAA,WAAW,EAAEY,gBAAF,aAAEA,gBAAF,cAAEA,gBAAF,GAAsBsE,mBAJnC;AAKE,IAAA,KAAK,EAAE1E,KALT;AAME,IAAA,SAAS,EAAEC,SANb;AAOE,IAAA,OAAO,EAAEC,OAPX;AAQE,IAAA,IAAI,EAAEC,IARR;AASE,IAAA,cAAc,EAAEE,WAAW,CAACW;AAT9B,KAUMwD,gBAVN,gBAYE,oBAACG,UAAD;AACE,IAAA,OAAO,EAAErC,eADX;AAEE,IAAA,MAAM,EAAEjC,WAAW,CAACE,MAFtB;AAGE,IAAA,SAAS,EACP,OAAOV,gBAAP,KAA4B,UAA5B,IAA0C,OAAO1B,OAAP,KAAmB,UAA7D,GAA0E,mBAA1E,GAAgGiG;AAJpG,kBAUE,oBAAC,GAAD;AACE,IAAA,OAAO,EAAE7B,wBADX;AAEE,IAAA,WAAW,EAAElC,WAAW,CAAC6C,WAF3B;AAGE,IAAA,WAAW,EAAE7C,WAAW,CAACU,WAH3B;AAIE,IAAA,YAAY,EAAEV,WAAW,CAACS,YAJ5B;AAKE,IAAA,OAAO,EAAEK,SAAS,CAACkB,QALrB;AAME,IAAA,OAAO,EAAEhB,OAAO,CAACgB,QANnB;AAOE,IAAA,IAAI,EAAE5C,OAPR;AAQE,IAAA,cAAc,EAAE,CARlB;AASE,IAAA,iBAAiB,EAAEE,WAAW,KAAK,KATrC;AAUE,IAAA,SAAS,EAAEsE,eAVb;AAWE,IAAA,KAAK,EAAE3C,SAXT;AAYE,IAAA,WAAW,EAAEjB,WAAW,CAACmB,aAZ3B;AAaE,IAAA,WAAW,EAAEnB,WAAW,CAACmB,aAAZ,IAA6B,IAA7B,IAAqCmB;AAbpD,KAeG5C,WAAW,iBAAI,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAC;AAAhB,KAA0BA,WAA1B,CAflB,EAgBGN,OAAO,IACNA,OAAO,CAACmF,GAAR,CAAY,UAACC,IAAD,EAAOpD,KAAP;AAAA;;AAAA,wBACV,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,IAAI,EAAEN,SAAS,CAACC,SAAV,CAAoB0D,iBAAiB,CAACD,IAAD,EAAO1D,SAAS,CAACkB,QAAjB,EAA2B,EAA3B,CAArC,CAFR;AAGE,MAAA,IAAI,8CAAEhB,OAAO,CAAC0D,MAAV,oDAAE,gBAAiBtD,KAAjB,CAAF,+GAA6DA,KAAK,GAAG,EAAT,GAAe,CAA3E;AAHN,MADU;AAAA,GAAZ,CAjBJ,CAVF,eAmCE,oBAAC,OAAD;AACE,IAAA,MAAM,EAAEzC,kBADV;AAEE,IAAA,SAAS,EAAE+C,qBAFb;AAGE,IAAA,YAAY,EAAEnD,mBAHhB;AAIE,IAAA,SAAS,EAAEyB,WAAW,CAACY,gBAJzB;AAKE,IAAA,UAAU,EAAEZ,WAAW,CAAC2E;AAL1B,KAMMpF,aANN,EAnCF,EA2CG,CAACF,QAAD;AAAA;AACC;AACA;AACA,sBAAC,MAAD;AACE,IAAA,aAAa,EAAEW,WAAW,CAACO,cAD7B;AAEE,IAAA,KAAK,EAAEP,WAAW,CAACQ,qBAFrB;AAGE,IAAA,OAAO,EAAEsB,iBAHX;AAIE,IAAA,YAAY,EAAEkC;AAJhB,IA9CJ,EAqDG/E,KAAK,CAAC2F,QArDT,CAZF,CADF;AAsED,CAvP6C,CAA9C;AAyPA7F,QAAQ,CAAC8F,YAAT,GAAwB;AACtBxF,EAAAA,QAAQ,EAAE,KADY;AAEtBC,EAAAA,WAAW,EAAE;AAFS,CAAxB;AAKAP,QAAQ,CAAC+F,WAAT,GAAuB,UAAvB;;ACzUA;AACA;AACA;AACA;AACA;;IACMC,UAA6B,gBAAG/F,UAAU,CAAC,UAACC,KAAD,EAAuBC,GAAvB,EAA+B;AAC9E,MAAMc,WAAW,GAAGC,OAAO,CAAC,YAAM;AAChC;AACEM,MAAAA,cAAc,EAAE,QADlB;AAEEE,MAAAA,YAAY,EAAE,CAFhB;AAGEoC,MAAAA,WAAW,EAAE;AAHf,OAIK5D,KAAK,CAACe,WAJX;AAMD,GAP0B,EAOxB,CAACf,KAAK,CAACe,WAAP,CAPwB,CAA3B;AASA,sBAAO,oBAAC,QAAD,eAAcf,KAAd;AAAqB,IAAA,GAAG,EAAEC,GAA1B;AAA+B,IAAA,WAAW,EAAEc;AAA5C,KAAP;AACD,CAX+C;AAahD+E,UAAU,CAACD,WAAX,GAAyB,YAAzB;;;;"}