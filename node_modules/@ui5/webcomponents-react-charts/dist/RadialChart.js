import _extends from '@babel/runtime/helpers/extends';
import { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';
import { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/dist/usePassThroughHtmlProps';
import { enrichEventWithDetails } from '@ui5/webcomponents-react-base/dist/Utils';
import { ChartContainer } from '@ui5/webcomponents-react-charts/dist/components/ChartContainer';
import { PieChartPlaceholder } from '@ui5/webcomponents-react-charts/dist/PieChartPlaceholder';
import React, { useCallback, forwardRef, useMemo } from 'react';
import { RadialBarChart, PolarAngleAxis, RadialBar } from 'recharts';

var useOnClickInternal = function useOnClickInternal(onClick) {
  return useCallback(function (payload, event) {
    if (typeof onClick === 'function') {
      var _payload$activePayloa, _payload$activePayloa2;

      onClick(enrichEventWithDetails(event, {
        payload: payload === null || payload === void 0 ? void 0 : (_payload$activePayloa = payload.activePayload) === null || _payload$activePayloa === void 0 ? void 0 : (_payload$activePayloa2 = _payload$activePayloa[0]) === null || _payload$activePayloa2 === void 0 ? void 0 : _payload$activePayloa2.payload,
        activePayloads: payload === null || payload === void 0 ? void 0 : payload.activePayload
      }));
    }
  }, [onClick]);
};

var radialChartMargin = {
  right: 30,
  left: 30,
  top: 30,
  bottom: 30
};
var radialBarBackground = {
  fill: ThemingParameters.sapContent_ImagePlaceholderBackground
};
var radialBarLabelStyle = {
  fontSize: ThemingParameters.sapFontHeader3Size,
  fill: ThemingParameters.sapTextColor
};
/**
 * Displays a ring chart highlighting a current status.
 * The status can be emphasized by using the `color` prop.
 */

var RadialChart = /*#__PURE__*/forwardRef(function (props, ref) {
  var maxValue = props.maxValue,
      value = props.value,
      displayValue = props.displayValue,
      onDataPointClick = props.onDataPointClick,
      onClick = props.onClick,
      color = props.color,
      style = props.style,
      className = props.className,
      tooltip = props.tooltip,
      slot = props.slot,
      noAnimation = props.noAnimation;
  var range = useMemo(function () {
    return [0, maxValue];
  }, [maxValue]);
  var dataset = useMemo(function () {
    return [{
      value: value
    }];
  }, [value]);
  var onDataPointClickInternal = useCallback(function (payload, i, event) {
    if (payload && onDataPointClick) {
      onDataPointClick(enrichEventWithDetails(event, {
        value: payload.value,
        payload: payload.payload,
        dataIndex: i
      }));
    }
  }, [onDataPointClick]);
  var onClickInternal = useOnClickInternal(onClick);
  var passThroughProps = usePassThroughHtmlProps(props, ['onDataPointClick', 'onLegendClick', 'onClick']);
  return /*#__PURE__*/React.createElement(ChartContainer, _extends({
    dataset: dataset,
    ref: ref,
    Placeholder: PieChartPlaceholder,
    style: style,
    className: className,
    tooltip: tooltip,
    slot: slot,
    resizeDebounce: 250
  }, passThroughProps), /*#__PURE__*/React.createElement(RadialBarChart, {
    onClick: onClickInternal,
    margin: radialChartMargin,
    innerRadius: "90%",
    outerRadius: "100%",
    barSize: 10,
    data: dataset,
    cx: "50%",
    cy: "50%",
    startAngle: 90,
    endAngle: -270
  }, /*#__PURE__*/React.createElement(PolarAngleAxis, {
    type: "number",
    domain: range,
    tick: false
  }), /*#__PURE__*/React.createElement(RadialBar, {
    isAnimationActive: noAnimation === false,
    background: radialBarBackground,
    dataKey: "value",
    cornerRadius: "50%",
    fill: color !== null && color !== void 0 ? color : ThemingParameters.sapChart_OrderedColor_1 // eslint-disable-next-line @typescript-eslint/ban-ts-comment
    // @ts-ignore
    ,
    onClick: onDataPointClickInternal
  }), /*#__PURE__*/React.createElement("text", {
    x: "50%",
    y: "50%",
    textAnchor: "middle",
    dominantBaseline: "middle",
    className: "progress-label",
    style: radialBarLabelStyle
  }, displayValue)));
});
RadialChart.defaultProps = {
  maxValue: 100,
  noAnimation: false
};
RadialChart.displayName = 'RadialChart';

export { RadialChart };
//# sourceMappingURL=RadialChart.js.map
