{"version":3,"file":"ColumnChartWithTrend.js","sources":["../src/internal/defaults.ts","../src/hooks/useLongestYAxisLabel.ts","../src/hooks/usePrepareDimensionsAndMeasures.ts","../src/hooks/usePrepareTrendMeasures.ts","../src/components/ColumnChartWithTrend/ColumnChartWithTrend.tsx"],"sourcesContent":["export const defaultFormatter = (d) => d;\n\nexport const defaultMaxYAxisWidth = 200;\n","import { getTextWidth } from '@ui5/webcomponents-react-charts/dist/Utils';\nimport { useMemo } from 'react';\nimport { getValueByDataKey } from 'recharts/lib/util/ChartUtils';\nimport { defaultMaxYAxisWidth } from '../internal/defaults';\n\nexport const useLongestYAxisLabel = (dataset: unknown[], elements): [number, object] =>\n  useMemo(() => {\n    let labelLength = 0;\n    const primaryElement = elements[0];\n\n    if (dataset instanceof Array && primaryElement) {\n      const resolveAllMeasureLabels = (item): string[] => {\n        return elements.map((elementConfig) =>\n          primaryElement.formatter(getValueByDataKey(item, elementConfig.accessor, ''))\n        );\n      };\n      labelLength = Math.max(...dataset.map(resolveAllMeasureLabels).flat().map(getTextWidth));\n      labelLength += 8;\n    }\n\n    labelLength = Math.min(labelLength, defaultMaxYAxisWidth);\n\n    return [labelLength, { marginLeft: labelLength, maxWidth: `calc(100% - ${labelLength + 10}px)` }];\n  }, [dataset, elements]);\n","import { useMemo } from 'react';\n\nexport const usePrepareDimensionsAndMeasures = <DimensionConfig = any, MeasureConfig = any>(\n  rawDimensions,\n  rawMeasures,\n  dimensionDefaults = {},\n  measureDefaults = {}\n) => {\n  const dimensions: DimensionConfig = useMemo(\n    () =>\n      rawDimensions.map((label) => ({\n        ...dimensionDefaults,\n        ...label\n      })),\n    [rawDimensions, dimensionDefaults]\n  );\n\n  const measures: MeasureConfig = useMemo(\n    () =>\n      rawMeasures.map((value) => ({\n        ...measureDefaults,\n        ...value\n      })),\n    [rawMeasures, measureDefaults]\n  );\n\n  return { dimensions, measures };\n};\n","import { useMemo } from 'react';\nimport { getValueByDataKey } from 'recharts/lib/util/ChartUtils';\nimport { IChartMeasure } from '../interfaces/IChartMeasure';\nimport { defaultFormatter } from '../internal/defaults';\n\ninterface ITrendChartMeasure extends IChartMeasure {\n  type: 'line' | 'bar';\n}\n\nexport const usePrepareTrendMeasures = (measures: ITrendChartMeasure[], dataset: Record<string, unknown>[]) =>\n  useMemo(() => {\n    const lineMeasures = [];\n    const columnMeasures = [];\n    const columnDataset = [];\n\n    measures?.forEach((measure, index) => {\n      if (measure.type === 'bar') {\n        columnMeasures.push({\n          color: measure.color ?? `var(--sapChart_OrderedColor_${(index % 11) + 1})`,\n          ...measure,\n          formatter: defaultFormatter\n        });\n      }\n\n      if (measure.type === 'line') {\n        lineMeasures.push({\n          color: measure.color ?? `var(--sapChart_OrderedColor_${(index % 11) + 1})`,\n          ...measure,\n          formatter: defaultFormatter\n        });\n        columnMeasures.push({\n          ...measure,\n          opacity: 0,\n          hideDataLabel: true,\n          showDot: false,\n          formatter: defaultFormatter\n        });\n      }\n    });\n\n    dataset?.forEach((data) => {\n      const reducedLineValues = {};\n\n      lineMeasures.forEach((line) => {\n        reducedLineValues[`__${line.accessor}`] = getValueByDataKey(data, line.accessor);\n        reducedLineValues[line.accessor] = 0;\n      });\n\n      columnDataset.push({\n        ...data,\n        ...reducedLineValues\n      });\n    });\n    return { lineMeasures, columnMeasures, columnDataset };\n  }, [measures]);\n","import { useConsolidatedRef, usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/dist/hooks';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\nimport { ComposedChart } from '@ui5/webcomponents-react-charts/dist//ComposedChart';\nimport { ColumnChartWithTrendPlaceholder } from '@ui5/webcomponents-react-charts/dist/ColumnChartWithTrendPlaceholder';\nimport React, { CSSProperties, FC, forwardRef, Ref, useMemo } from 'react';\nimport { useLongestYAxisLabel } from '../../hooks/useLongestYAxisLabel';\nimport { usePrepareDimensionsAndMeasures } from '../../hooks/usePrepareDimensionsAndMeasures';\nimport { usePrepareTrendMeasures } from '../../hooks/usePrepareTrendMeasures';\nimport { IChartBaseProps } from '../../interfaces/IChartBaseProps';\nimport { IChartDimension } from '../../interfaces/IChartDimension';\nimport { IChartMeasure } from '../../interfaces/IChartMeasure';\nimport { defaultFormatter } from '../../internal/defaults';\nimport { TooltipProps } from 'recharts';\n\ninterface MeasureConfig extends IChartMeasure {\n  /**\n   * Column Width\n   */\n  width?: number;\n  /**\n   * Column Opacity\n   */\n  opacity?: number;\n  /**\n   * Chart type\n   */\n  type: AvailableChartTypes;\n  /**\n   * column Stack ID\n   */\n  stackId?: string;\n  /**\n   * Highlight color of defined elements\n   * @param value {string | number} Current value of the highlighted measure\n   * @param measure {IChartMeasure} Current measure object\n   * @param dataElement {object} Current data element\n   */\n  highlightColor?: (value: number, measure: MeasureConfig, dataElement: Record<string, any>) => CSSProperties['color'];\n}\n\ninterface DimensionConfig extends IChartDimension {\n  /**\n   * Interval of axis label which defines the number that controls how many ticks are rendered on the x axis\n   * @default 0\n   */\n  interval?: number;\n}\n\nexport interface ColumnChartWithTrendProps extends Omit<IChartBaseProps, 'syncId'> {\n  /**\n   * An array of config objects. Each object will define one dimension of the chart.\n   *\n   * #### Required Properties\n   * - `accessor`: string containing the path to the dataset key the dimension should display. Supports object structures by using <code>'parent.child'</code>.\n   *   Can also be a getter.\n   *\n   * #### Optional Properties\n   * - `formatter`: function will be called for each data label and allows you to format it according to your needs\n   * - `interval`: number that controls how many ticks are rendered on the x axis\n   *\n   */\n  dimensions: DimensionConfig[];\n  /**\n   * An array of config objects. Each object is defining one column in the chart.\n   *\n   * #### Required properties\n   * - `accessor`: string containing the path to the dataset key this column should display. Supports object structures by using <code>'parent.child'</code>.\n   *   Can also be a getter.\n   *\n   * #### Optional properties\n   *\n   * - `label`: Label to display in legends or tooltips. Falls back to the <code>accessor</code> if not present.\n   * - `color`: any valid CSS Color or CSS Variable. Defaults to the `sapChart_Ordinal` colors\n   * - `formatter`: function will be called for each data label and allows you to format it according to your needs\n   * - `hideDataLabel`: flag whether the data labels should be hidden in the chart for this column.\n   * - `DataLabel`: a custom component to be used for the data label\n   * - `width`: column width, defaults to `auto`\n   * - `opacity`: column opacity, defaults to `1`\n   * - `stackId`: columns with the same stackId will be stacked\n   * - `highlightColor`: function will be called to define a custom color of a specific element which matches the\n   *    defined condition. Overwrites code>color</code> of the element.\n   *\n   */\n  measures: MeasureConfig[];\n}\n\nconst dimensionDefaults = {\n  formatter: defaultFormatter\n};\n\nconst measureDefaults = {\n  formatter: defaultFormatter,\n  opacity: 1\n};\n\nconst lineTooltipConfig = { wrapperStyle: { visibility: 'hidden' } } as TooltipProps<any, any>;\n\ntype AvailableChartTypes = 'line' | 'bar' | string;\n/**\n * A `ColumnChartWithTrend` is a data visualization where each category is represented by a rectangle, with the height of the rectangle being proportional to the values being plotted amd a trend line which is displayed above the column chart.\n */\nconst ColumnChartWithTrend: FC<ColumnChartWithTrendProps> = forwardRef(\n  (props: ColumnChartWithTrendProps, ref: Ref<HTMLDivElement>) => {\n    const {\n      loading,\n      dataset,\n      style,\n      className,\n      slot,\n      tooltip,\n      onClick,\n      noLegend,\n      noAnimation,\n      tooltipConfig,\n      onDataPointClick,\n      onLegendClick,\n      ChartPlaceholder\n    } = props;\n\n    const chartRef = useConsolidatedRef<any>(ref);\n    const passThroughProps = usePassThroughHtmlProps(props, ['onDataPointClick', 'onLegendClick', 'onClick']);\n\n    const chartConfig = useMemo(() => {\n      return {\n        yAxisVisible: false,\n        xAxisVisible: true,\n        gridStroke: ThemingParameters.sapList_BorderColor,\n        gridHorizontal: true,\n        gridVertical: false,\n        legendPosition: 'bottom',\n        legendHorizontalAlign: 'left',\n        barGap: 3,\n        zoomingTool: false,\n        resizeDebounce: 250,\n        ...props.chartConfig\n      };\n    }, [props.chartConfig]);\n\n    const { dimensions, measures } = usePrepareDimensionsAndMeasures(\n      props.dimensions,\n      props.measures,\n      dimensionDefaults,\n      measureDefaults\n    );\n\n    const { lineMeasures, columnMeasures, columnDataset } = usePrepareTrendMeasures(measures, dataset);\n    const [yAxisWidth] = useLongestYAxisLabel(columnDataset, columnMeasures);\n\n    const columnTooltipConfig = {\n      formatter: (value, name, tooltipProps) => {\n        const line = lineMeasures.find((currLine) => currLine.accessor === tooltipProps.dataKey);\n        if (line) {\n          // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n          return line.formatter(tooltipProps.payload[`__${line.accessor}`]);\n        }\n        const column = columnMeasures.find((currLine) => currLine.accessor === tooltipProps.dataKey);\n        return column.formatter(value, name, tooltipProps);\n      }\n    } as TooltipProps<any, any>;\n\n    return (\n      <div\n        ref={chartRef}\n        style={{ display: 'flex', flexDirection: 'column', height: style?.height, width: style?.width, ...style }}\n        className={className}\n        slot={slot}\n        {...passThroughProps}\n      >\n        {dataset?.length !== 0 && (\n          <ComposedChart\n            className={\n              typeof onDataPointClick === 'function' || typeof onClick === 'function' ? 'has-click-handler' : undefined\n            }\n            tooltipConfig={lineTooltipConfig}\n            noAnimation={noAnimation}\n            loading={loading}\n            onClick={onClick}\n            syncId={'trend'}\n            style={{ ...style, height: `calc(${style?.height} * 0.2)` }}\n            dataset={dataset}\n            measures={lineMeasures}\n            dimensions={dimensions}\n            tooltip={tooltip}\n            noLegend\n            chartConfig={{\n              xAxisVisible: false,\n              yAxisVisible: false,\n              yAxisTicksVisible: false,\n              gridHorizontal: false,\n              yAxisLabelsVisible: false,\n              yAxisWidth\n            }}\n          />\n        )}\n        <ComposedChart\n          onLegendClick={onLegendClick}\n          tooltipConfig={columnTooltipConfig}\n          noAnimation={noAnimation}\n          noLegend={noLegend}\n          loading={loading}\n          onClick={onClick}\n          syncId={'trend'}\n          ChartPlaceholder={ChartPlaceholder ?? ColumnChartWithTrendPlaceholder}\n          dataset={columnDataset}\n          measures={columnMeasures}\n          dimensions={dimensions}\n          chartConfig={chartConfig}\n          tooltip={tooltip}\n          style={{ ...style, height: `calc(${style?.height} * ${dataset?.length !== 0 ? 0.8 : 1})` }}\n          className={\n            typeof onDataPointClick === 'function' || typeof onClick === 'function' ? 'has-click-handler' : undefined\n          }\n        />\n      </div>\n    );\n  }\n);\n\nColumnChartWithTrend.defaultProps = {\n  noLegend: false,\n  noAnimation: false\n};\n\nColumnChartWithTrend.displayName = 'ColumnChartWithTrend';\n\nexport { ColumnChartWithTrend };\n"],"names":["defaultFormatter","d","defaultMaxYAxisWidth","useLongestYAxisLabel","dataset","elements","useMemo","labelLength","primaryElement","Array","resolveAllMeasureLabels","item","map","elementConfig","formatter","getValueByDataKey","accessor","Math","max","flat","getTextWidth","min","marginLeft","maxWidth","usePrepareDimensionsAndMeasures","rawDimensions","rawMeasures","dimensionDefaults","measureDefaults","dimensions","label","measures","value","usePrepareTrendMeasures","lineMeasures","columnMeasures","columnDataset","forEach","measure","index","type","push","color","opacity","hideDataLabel","showDot","data","reducedLineValues","line","lineTooltipConfig","wrapperStyle","visibility","ColumnChartWithTrend","forwardRef","props","ref","loading","style","className","slot","tooltip","onClick","noLegend","noAnimation","tooltipConfig","onDataPointClick","onLegendClick","ChartPlaceholder","chartRef","useConsolidatedRef","passThroughProps","usePassThroughHtmlProps","chartConfig","yAxisVisible","xAxisVisible","gridStroke","ThemingParameters","sapList_BorderColor","gridHorizontal","gridVertical","legendPosition","legendHorizontalAlign","barGap","zoomingTool","resizeDebounce","yAxisWidth","columnTooltipConfig","name","tooltipProps","find","currLine","dataKey","payload","column","display","flexDirection","height","width","length","undefined","yAxisTicksVisible","yAxisLabelsVisible","ColumnChartWithTrendPlaceholder","defaultProps","displayName"],"mappings":"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"}