{"version":3,"file":"ScatterChart.js","sources":["../src/hooks/useChartMargin.ts","../src/internal/defaults.ts","../src/hooks/useLongestYAxisLabel.ts","../src/hooks/useObserveXAxisHeights.ts","../src/hooks/usePrepareDimensionsAndMeasures.ts","../src/hooks/useTooltipFormatter.ts","../src/internal/staticProps.ts","../src/components/ScatterChart/ScatterChart.tsx"],"sourcesContent":["import { useMemo } from 'react';\n\nexport const useChartMargin = (margin, hasZoomingTool) =>\n  useMemo(() => {\n    return {\n      right: margin?.right ?? 30,\n      top: margin?.top ?? hasZoomingTool ? 40 : 20,\n      bottom: margin?.bottom ?? 20,\n      left: margin?.left ?? 10\n    };\n  }, [margin, hasZoomingTool]);\n","export const defaultFormatter = (d) => d;\n\nexport const defaultMaxYAxisWidth = 200;\n","import { getTextWidth } from '@ui5/webcomponents-react-charts/dist/Utils';\nimport { useMemo } from 'react';\nimport { getValueByDataKey } from 'recharts/lib/util/ChartUtils';\nimport { defaultMaxYAxisWidth } from '../internal/defaults';\n\nexport const useLongestYAxisLabel = (dataset: unknown[], elements): [number, object] =>\n  useMemo(() => {\n    let labelLength = 0;\n    const primaryElement = elements[0];\n\n    if (dataset instanceof Array && primaryElement) {\n      const resolveAllMeasureLabels = (item): string[] => {\n        return elements.map((elementConfig) =>\n          primaryElement.formatter(getValueByDataKey(item, elementConfig.accessor, ''))\n        );\n      };\n      labelLength = Math.max(...dataset.map(resolveAllMeasureLabels).flat().map(getTextWidth));\n      labelLength += 8;\n    }\n\n    labelLength = Math.min(labelLength, defaultMaxYAxisWidth);\n\n    return [labelLength, { marginLeft: labelLength, maxWidth: `calc(100% - ${labelLength + 10}px)` }];\n  }, [dataset, elements]);\n","import { debounce } from '@ui5/webcomponents-react-base/dist/Utils';\nimport { RefObject, useEffect, useRef, useState } from 'react';\n\nconst defaultAxisHeight = 30;\n\nexport const useObserveXAxisHeights = (chartRef: RefObject<SVGElement>, axisCount) => {\n  const [xAxisHeights, setXAxisHeights] = useState(Array(axisCount).fill(defaultAxisHeight));\n  const mostRecentXAxisHeights = useRef<number[]>(xAxisHeights);\n\n  useEffect(() => {\n    const mutationObserver = new MutationObserver(\n      debounce(() => {\n        const defaultHeights = Array(axisCount).fill(defaultAxisHeight);\n        chartRef.current?.querySelectorAll<SVGGraphicsElement>('.xAxis').forEach((xAxis, index) => {\n          const currentAxisHeight = xAxis?.getBBox()?.height;\n          if (currentAxisHeight > 30) {\n            defaultHeights[index] = currentAxisHeight;\n          }\n        });\n\n        const arraysHaveTheSameLength = mostRecentXAxisHeights.current.length === defaultHeights.length;\n        const arrayContentIsIdentical = mostRecentXAxisHeights.current.every(\n          (value, index) => defaultHeights[index] === value\n        );\n        if (!(arraysHaveTheSameLength && arrayContentIsIdentical)) {\n          mostRecentXAxisHeights.current = defaultHeights;\n          setXAxisHeights(defaultHeights);\n        }\n      }, 75)\n    );\n\n    if (chartRef.current) {\n      mutationObserver.observe(chartRef.current, {\n        characterData: false,\n        characterDataOldValue: false,\n        attributes: false,\n        childList: true,\n        subtree: true\n      });\n    }\n    return () => {\n      mutationObserver.disconnect();\n    };\n  }, [chartRef, setXAxisHeights, mostRecentXAxisHeights]);\n\n  return xAxisHeights;\n};\n","import { useMemo } from 'react';\n\nexport const usePrepareDimensionsAndMeasures = <DimensionConfig = any, MeasureConfig = any>(\n  rawDimensions,\n  rawMeasures,\n  dimensionDefaults = {},\n  measureDefaults = {}\n) => {\n  const dimensions: DimensionConfig = useMemo(\n    () =>\n      rawDimensions.map((label) => ({\n        ...dimensionDefaults,\n        ...label\n      })),\n    [rawDimensions, dimensionDefaults]\n  );\n\n  const measures: MeasureConfig = useMemo(\n    () =>\n      rawMeasures.map((value) => ({\n        ...measureDefaults,\n        ...value\n      })),\n    [rawMeasures, measureDefaults]\n  );\n\n  return { dimensions, measures };\n};\n","import { useCallback } from 'react';\n\nexport const useTooltipFormatter = (measures) => {\n  return useCallback(\n    (value, name, props) => {\n      const measure = measures.find(({ accessor }) => accessor === props.dataKey);\n      if (measure && typeof measure.formatter === 'function') {\n        return measure.formatter(value);\n      }\n      return value;\n    },\n    [measures]\n  );\n};\n","import { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\n\nexport const tickLineConfig = { stroke: 'transparent' };\nexport const tooltipContentStyle = { backgroundColor: ThemingParameters.sapBackgroundColor };\nexport const tooltipFillOpacity: any = { fillOpacity: 0.3 }; // we need type any due to recharts typing error\nexport const xAxisPadding = { left: 25, right: 25 };\n","import { useIsRTL, usePassThroughHtmlProps, useConsolidatedRef } from '@ui5/webcomponents-react-base/dist/hooks';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\nimport { enrichEventWithDetails } from '@ui5/webcomponents-react-base/dist/Utils';\nimport { ChartContainer } from '@ui5/webcomponents-react-charts/dist/components/ChartContainer';\nimport { XAxisTicks } from '@ui5/webcomponents-react-charts/dist/components/XAxisTicks';\nimport { YAxisTicks } from '@ui5/webcomponents-react-charts/dist/components/YAxisTicks';\nimport { ScatterChartPlaceholder } from '@ui5/webcomponents-react-charts/dist/ScatterChartPlaceholder';\nimport { useLegendItemClick } from '@ui5/webcomponents-react-charts/dist/useLegendItemClick';\nimport React, { CSSProperties, FC, forwardRef, Ref, useCallback, useMemo, useRef } from 'react';\nimport {\n  CartesianGrid,\n  Legend,\n  ReferenceLine,\n  Scatter,\n  ScatterChart as ScatterChartLib,\n  Tooltip,\n  XAxis,\n  YAxis,\n  ZAxis,\n  Label\n} from 'recharts';\nimport { useChartMargin } from '../../hooks/useChartMargin';\nimport { useLongestYAxisLabel } from '../../hooks/useLongestYAxisLabel';\nimport { useObserveXAxisHeights } from '../../hooks/useObserveXAxisHeights';\nimport { usePrepareDimensionsAndMeasures } from '../../hooks/usePrepareDimensionsAndMeasures';\nimport { useTooltipFormatter } from '../../hooks/useTooltipFormatter';\nimport { ICartesianChartConfig } from '../../interfaces/ICartesianChartConfig';\nimport { IChartBaseProps } from '../../interfaces/IChartBaseProps';\nimport { IChartMeasure } from '../../interfaces/IChartMeasure';\nimport { defaultFormatter } from '../../internal/defaults';\nimport { tickLineConfig, tooltipContentStyle, tooltipFillOpacity, xAxisPadding } from '../../internal/staticProps';\n\ninterface MeasureConfig extends Omit<IChartMeasure, 'color' | 'hideDataLabel' | 'DataLabel'> {\n  /**\n   * Defines the axis of the measure\n   */\n  axis: 'x' | 'y' | 'z';\n}\n\ninterface ScatterDataObject {\n  /**\n   * Defines label of the dataset\n   */\n  label?: string;\n  /**\n   * Contains the data of the chart\n   */\n  data?: Record<string, unknown>[];\n  /**\n   * Any valid CSS Color or CSS Variable. Defaults to the `sapChart_Ordinal` colors\n   */\n  color?: CSSProperties['color'];\n  /**\n   * Defines opacity of the displayed dataset\n   * @default 1\n   */\n  opacity?: number;\n}\n\ninterface IScatterChartConfig extends ICartesianChartConfig {\n  referenceLineX?: {\n    label: string;\n    value: number;\n    color: string;\n  };\n}\n\nexport interface ScatterChartProps extends Omit<IChartBaseProps<IScatterChartConfig>, 'dataset'> {\n  /**\n   * An array of dataset objects. Each object defines a dataset which is displayed.\n   *\n   * #### Required properties\n   *  - `data`: array of objects which contains the data.\n   *\n   * #### Optional properties\n   *  - `label`: string containing the label of the dataset which is also displayed in the legend.\n   *  - `color`: any valid CSS color or CSS variable. Defaults to the `sapChart_Ordinal` colors.\n   *  - `opacity`: number contains value of opacity of dataset\n   *\n   * #### Example of dataset:\n   *\n   * <code>\n   *   <pre>\n   *    [\n   *      {\n   *       label: 'America',\n   *       opacity: 0.7,\n   *       data: [\n   *         {\n   *           users: 120,\n   *           sessions: 200,\n   *           volume: 302\n   *         },\n   *         {\n   *           users: 20,\n   *           sessions: 230,\n   *           volume: 392\n   *         }\n   *       ]\n   *      }\n   *    ]\n   *   </pre>\n   * </code>\n   */\n  dataset?: ScatterDataObject[];\n  /**\n   * An array of config objects. Each object is defining one axis in the chart.\n   *\n   * #### Required properties\n   *  - `accessor`: string containing the path to the dataset key this line should display. Supports object structures by using <code>'parent.child'</code>.\n   *     Can also be a getter.\n   *  - `axis`: string containing definition of axis. Must be x, y or z data to the axis.\n   *\n   * #### Optional properties\n   *  - `label`: Label to display in tooltips. Falls back to the <code>accessor</code> if not present.\n   *  - `formatter`: function will be called for each data label and allows you to format it according to your needs. Also addresses labels of axis.\n   */\n  measures?: MeasureConfig[];\n}\n\nconst measureDefaults = {\n  formatter: defaultFormatter\n};\n\n/**\n *\n * A `ScatterChart` is a data visualization that displays multiple circles (bubbles) in a two-dimensional plot.\n *\n * Most commonly, a scatter chart displays the values of three numeric variables,where each observation's data is\n * shown by a circle, while the horizontal and vertical positions of the bubble show the values of two other variables.\n */\nconst ScatterChart: FC<ScatterChartProps> = forwardRef((props: ScatterChartProps, ref: Ref<HTMLDivElement>) => {\n  const {\n    dataset,\n    loading,\n    noLegend,\n    noAnimation,\n    tooltipConfig,\n    onDataPointClick,\n    onLegendClick,\n    onClick,\n    style,\n    className,\n    tooltip,\n    slot,\n    ChartPlaceholder\n  } = props;\n\n  const chartConfig = useMemo(() => {\n    return {\n      yAxisVisible: false,\n      xAxisVisible: true,\n      gridStroke: ThemingParameters.sapList_BorderColor,\n      gridHorizontal: true,\n      gridVertical: false,\n      legendPosition: 'bottom',\n      legendHorizontalAlign: 'left',\n      zoomingTool: false,\n      resizeDebounce: 250,\n      ...props.chartConfig\n    };\n  }, [props.chartConfig]);\n\n  const { measures } = usePrepareDimensionsAndMeasures([], props.measures, {}, measureDefaults);\n\n  const tooltipValueFormatter = useTooltipFormatter(measures);\n  const chartRef = useConsolidatedRef<any>(ref);\n  const preventOnClickCall = useRef(false);\n  const onItemLegendClick = useLegendItemClick(onLegendClick);\n  const onClickInternal = useCallback(\n    (payload, event) => {\n      if (typeof onClick === 'function' && !preventOnClickCall.current) {\n        onClick(\n          enrichEventWithDetails(event, {\n            payload: payload?.activePayload?.[0]?.payload,\n            activePayloads: payload?.activePayload\n          })\n        );\n      }\n      if (preventOnClickCall.current) {\n        preventOnClickCall.current = false;\n      }\n    },\n    [onClick, preventOnClickCall.current]\n  );\n\n  const onDataPointClickInternal = useCallback(\n    (payload, eventOrIndex, event) => {\n      if (payload && onDataPointClick) {\n        onDataPointClick(\n          enrichEventWithDetails(event, {\n            value: payload.node,\n            dataKey: payload.zAxis.dataKey,\n            dataIndex: eventOrIndex,\n            payload: payload.payload\n          })\n        );\n        preventOnClickCall.current = true;\n      }\n    },\n    [onDataPointClick, preventOnClickCall.current]\n  );\n  const isBigDataSet = dataset?.length > 30 ?? false;\n\n  const xMeasure = measures.find(({ axis }) => axis === 'x');\n  const yMeasure = measures.find(({ axis }) => axis === 'y');\n  const zMeasure = measures.find(({ axis }) => axis === 'z');\n\n  const [yAxisWidth, legendPosition] = useLongestYAxisLabel(dataset?.[0].data, [yMeasure]);\n  const xAxisHeights = useObserveXAxisHeights(chartRef, 1);\n  const marginChart = useChartMargin(chartConfig.margin, chartConfig.zoomingTool);\n  const passThroughProps = usePassThroughHtmlProps(props, ['onDataPointClick', 'onLegendClick', 'onClick']);\n  const isRTL = useIsRTL(chartRef);\n\n  return (\n    <ChartContainer\n      dataset={dataset}\n      loading={loading}\n      Placeholder={ChartPlaceholder ?? ScatterChartPlaceholder}\n      ref={chartRef}\n      style={style}\n      className={className}\n      tooltip={tooltip}\n      slot={slot}\n      resizeDebounce={chartConfig.resizeDebounce}\n      {...passThroughProps}\n    >\n      <ScatterChartLib\n        onClick={onClickInternal}\n        margin={marginChart}\n        className={typeof onDataPointClick === 'function' ? 'has-click-handler' : undefined}\n      >\n        <CartesianGrid\n          vertical={chartConfig.gridVertical}\n          horizontal={chartConfig.gridHorizontal}\n          stroke={chartConfig.gridStroke}\n        />\n        {chartConfig.xAxisVisible && (\n          <XAxis\n            type={'number'}\n            key={xMeasure?.accessor}\n            name={xMeasure?.label}\n            dataKey={xMeasure?.accessor}\n            xAxisId={0}\n            interval={xMeasure?.interval ?? (isBigDataSet ? 'preserveStart' : 0)}\n            tick={<XAxisTicks config={xMeasure} />}\n            padding={xAxisPadding}\n            height={xAxisHeights[0]}\n            reversed={isRTL}\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            label={xMeasure?.label ? { value: xMeasure?.label, dy: 15, position: 'insideRight' } : 0}\n          />\n        )}\n        <YAxis\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          label={\n            yMeasure?.label\n              ? { value: yMeasure?.label, angle: -90, position: isRTL ? 'insideRight' : 'insideLeft' }\n              : false\n          }\n          type={'number'}\n          name={yMeasure?.label}\n          axisLine={chartConfig.yAxisVisible}\n          tickLine={tickLineConfig}\n          key={yMeasure?.accessor}\n          dataKey={yMeasure?.accessor}\n          tickFormatter={yMeasure?.formatter}\n          interval={0}\n          tick={<YAxisTicks config={yMeasure} />}\n          width={yMeasure?.label ? yAxisWidth + 10 : yAxisWidth}\n          margin={yMeasure?.label ? { left: 200 } : 0}\n          orientation={isRTL === true ? 'right' : 'left'}\n        />\n        <ZAxis name={zMeasure?.label} dataKey={zMeasure?.accessor} range={[0, 5000]} key={zMeasure?.accessor} />\n        {dataset?.map((dataSet, index) => {\n          return (\n            <Scatter\n              className={typeof onDataPointClick === 'function' ? 'has-click-handler' : undefined}\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              // @ts-ignore\n              onMouseDown={onDataPointClickInternal}\n              opacity={dataSet.opacity}\n              data={dataSet?.data}\n              name={dataSet?.label}\n              key={dataSet?.label}\n              fill={dataSet?.color ?? `var(--sapChart_OrderedColor_${(index % 11) + 1})`}\n              isAnimationActive={noAnimation === false}\n            />\n          );\n        })}\n        {!noLegend && (\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          <Legend\n            verticalAlign={chartConfig.legendPosition}\n            align={chartConfig.legendHorizontalAlign}\n            onClick={onItemLegendClick}\n            wrapperStyle={legendPosition}\n          />\n        )}\n        {chartConfig.referenceLine && (\n          <ReferenceLine stroke={chartConfig.referenceLine.color} y={chartConfig.referenceLine.value}>\n            <Label>{chartConfig.referenceLine.label}</Label>\n          </ReferenceLine>\n        )}\n        {chartConfig.referenceLineX && (\n          <ReferenceLine stroke={chartConfig.referenceLineX.color} x={chartConfig.referenceLineX.value}>\n            <Label>{chartConfig.referenceLineX.label}</Label>\n          </ReferenceLine>\n        )}\n        <Tooltip\n          cursor={tooltipFillOpacity}\n          formatter={tooltipValueFormatter}\n          contentStyle={tooltipContentStyle}\n          {...tooltipConfig}\n        />\n        {props.children}\n      </ScatterChartLib>\n    </ChartContainer>\n  );\n});\n\nScatterChart.defaultProps = {\n  noLegend: false,\n  noAnimation: false\n};\n\nScatterChart.displayName = 'ScatterChart';\n\nexport { ScatterChart };\n"],"names":["useChartMargin","margin","hasZoomingTool","useMemo","right","top","bottom","left","defaultFormatter","d","defaultMaxYAxisWidth","useLongestYAxisLabel","dataset","elements","labelLength","primaryElement","Array","resolveAllMeasureLabels","item","map","elementConfig","formatter","getValueByDataKey","accessor","Math","max","flat","getTextWidth","min","marginLeft","maxWidth","defaultAxisHeight","useObserveXAxisHeights","chartRef","axisCount","useState","fill","xAxisHeights","setXAxisHeights","mostRecentXAxisHeights","useRef","useEffect","mutationObserver","MutationObserver","debounce","defaultHeights","current","querySelectorAll","forEach","xAxis","index","currentAxisHeight","getBBox","height","arraysHaveTheSameLength","length","arrayContentIsIdentical","every","value","observe","characterData","characterDataOldValue","attributes","childList","subtree","disconnect","usePrepareDimensionsAndMeasures","rawDimensions","rawMeasures","dimensionDefaults","measureDefaults","dimensions","label","measures","useTooltipFormatter","useCallback","name","props","measure","find","dataKey","tickLineConfig","stroke","tooltipContentStyle","backgroundColor","ThemingParameters","sapBackgroundColor","tooltipFillOpacity","fillOpacity","xAxisPadding","ScatterChart","forwardRef","ref","loading","noLegend","noAnimation","tooltipConfig","onDataPointClick","onLegendClick","onClick","style","className","tooltip","slot","ChartPlaceholder","chartConfig","yAxisVisible","xAxisVisible","gridStroke","sapList_BorderColor","gridHorizontal","gridVertical","legendPosition","legendHorizontalAlign","zoomingTool","resizeDebounce","tooltipValueFormatter","useConsolidatedRef","preventOnClickCall","onItemLegendClick","useLegendItemClick","onClickInternal","payload","event","enrichEventWithDetails","activePayload","activePayloads","onDataPointClickInternal","eventOrIndex","node","zAxis","dataIndex","isBigDataSet","xMeasure","axis","yMeasure","zMeasure","data","yAxisWidth","marginChart","passThroughProps","usePassThroughHtmlProps","isRTL","useIsRTL","ScatterChartPlaceholder","ScatterChartLib","undefined","interval","dy","position","angle","dataSet","opacity","color","referenceLine","referenceLineX","children","defaultProps","displayName"],"mappings":"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"}