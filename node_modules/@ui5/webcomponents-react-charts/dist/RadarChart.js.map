{"version":3,"file":"RadarChart.js","sources":["../src/hooks/useLabelFormatter.ts","../src/hooks/usePrepareDimensionsAndMeasures.ts","../src/hooks/useTooltipFormatter.ts","../src/internal/defaults.ts","../src/internal/staticProps.ts","../src/components/RadarChart/RadarChart.tsx"],"sourcesContent":["import { useCallback } from 'react';\n\nexport const useLabelFormatter = (primaryDimension) => {\n  return useCallback(\n    (name) => {\n      if (primaryDimension && typeof primaryDimension.formatter === 'function') {\n        return primaryDimension.formatter(name);\n      }\n      return name;\n    },\n    [primaryDimension]\n  );\n};\n","import { useMemo } from 'react';\n\nexport const usePrepareDimensionsAndMeasures = <DimensionConfig = any, MeasureConfig = any>(\n  rawDimensions,\n  rawMeasures,\n  dimensionDefaults = {},\n  measureDefaults = {}\n) => {\n  const dimensions: DimensionConfig = useMemo(\n    () =>\n      rawDimensions.map((label) => ({\n        ...dimensionDefaults,\n        ...label\n      })),\n    [rawDimensions, dimensionDefaults]\n  );\n\n  const measures: MeasureConfig = useMemo(\n    () =>\n      rawMeasures.map((value) => ({\n        ...measureDefaults,\n        ...value\n      })),\n    [rawMeasures, measureDefaults]\n  );\n\n  return { dimensions, measures };\n};\n","import { useCallback } from 'react';\n\nexport const useTooltipFormatter = (measures) => {\n  return useCallback(\n    (value, name, props) => {\n      const measure = measures.find(({ accessor }) => accessor === props.dataKey);\n      if (measure && typeof measure.formatter === 'function') {\n        return measure.formatter(value);\n      }\n      return value;\n    },\n    [measures]\n  );\n};\n","export const defaultFormatter = (d) => d;\n\nexport const defaultMaxYAxisWidth = 200;\n","import { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\n\nexport const tickLineConfig = { stroke: 'transparent' };\nexport const tooltipContentStyle = { backgroundColor: ThemingParameters.sapBackgroundColor };\nexport const tooltipFillOpacity: any = { fillOpacity: 0.3 }; // we need type any due to recharts typing error\nexport const xAxisPadding = { left: 25, right: 25 };\n","import { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\nimport { useConsolidatedRef } from '@ui5/webcomponents-react-base/dist/useConsolidatedRef';\nimport { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/dist/usePassThroughHtmlProps';\nimport { enrichEventWithDetails } from '@ui5/webcomponents-react-base/dist/Utils';\nimport { ChartContainer } from '@ui5/webcomponents-react-charts/dist/components/ChartContainer';\nimport { ChartDataLabel } from '@ui5/webcomponents-react-charts/dist/components/ChartDataLabel';\nimport { PieChartPlaceholder } from '@ui5/webcomponents-react-charts/dist/PieChartPlaceholder';\nimport { useLegendItemClick } from '@ui5/webcomponents-react-charts/dist/useLegendItemClick';\nimport React, { FC, forwardRef, Ref, useCallback, useMemo, useRef } from 'react';\nimport {\n  Legend,\n  PolarAngleAxis,\n  PolarGrid,\n  PolarRadiusAxis,\n  Radar,\n  RadarChart as RadarChartLib,\n  Tooltip\n} from 'recharts';\nimport { useLabelFormatter } from '../../hooks/useLabelFormatter';\nimport { usePrepareDimensionsAndMeasures } from '../../hooks/usePrepareDimensionsAndMeasures';\nimport { useTooltipFormatter } from '../../hooks/useTooltipFormatter';\nimport { IChartBaseProps } from '../../interfaces/IChartBaseProps';\nimport { IChartDimension } from '../../interfaces/IChartDimension';\nimport { IChartMeasure } from '../../interfaces/IChartMeasure';\nimport { defaultFormatter } from '../../internal/defaults';\nimport { tooltipContentStyle, tooltipFillOpacity } from '../../internal/staticProps';\n\ninterface MeasureConfig extends IChartMeasure {\n  /**\n   * Opacity\n   */\n  opacity?: number;\n}\n\nexport interface RadarChartProps extends IChartBaseProps {\n  /**\n   * An array of config objects. Each object will define one dimension of the chart.\n   *\n   * #### Required Properties\n   * - `accessor`: string containing the path to the dataset key the dimension should display. Supports object structures by using <code>'parent.child'</code>.\n   *   Can also be a getter.\n   *\n   * #### Optional Properties\n   * - `formatter`: function will be called for each data label and allows you to format it according to your needs\n   *\n   */\n  dimensions: IChartDimension[];\n  /**\n   * An array of config objects. Each object is defining one radar in the chart.\n   *\n   * #### Required properties\n   * - `accessor`: string containing the path to the dataset key this radar should display. Supports object structures by using <code>'parent.child'</code>.\n   *   Can also be a getter.\n   *\n   * #### Optional properties\n   *\n   * - `label`: Label to display in legends or tooltips. Falls back to the <code>accessor</code> if not present.\n   * - `color`: any valid CSS Color or CSS Variable. Defaults to the `sapChart_Ordinal` colors\n   * - `formatter`: function will be called for each data label and allows you to format it according to your needs\n   * - `hideDataLabel`: flag whether the data labels should be hidden in the chart for this radar.\n   * - `DataLabel`: a custom component to be used for the data label\n   * - `opacity`: radar opacity, defaults to `0.5`\n   *\n   */\n  measures: MeasureConfig[];\n}\n\nconst dimensionDefaults = {\n  formatter: (d) => d\n};\n\nconst measureDefaults = {\n  formatter: defaultFormatter,\n  opacity: 0.5\n};\n\n/**\n * A radar or spider or web chart is a two-dimensional chart type designed to plot one or more series of values over multiple quantitative variables.\n */\nconst RadarChart: FC<RadarChartProps> = forwardRef((props: RadarChartProps, ref: Ref<HTMLDivElement>) => {\n  const {\n    loading,\n    dataset,\n    noLegend,\n    noAnimation,\n    tooltipConfig,\n    onDataPointClick,\n    onLegendClick,\n    onClick,\n    style,\n    className,\n    tooltip,\n    slot,\n    ChartPlaceholder\n  } = props;\n\n  const chartConfig = useMemo(() => {\n    return {\n      legendPosition: 'bottom',\n      legendHorizontalAlign: 'center',\n      dataLabel: true,\n      polarGridType: 'circle' as 'circle',\n      resizeDebounce: 250,\n      ...props.chartConfig\n    };\n  }, [props.chartConfig]);\n\n  const chartRef = useConsolidatedRef<any>(ref);\n\n  const { dimensions, measures } = usePrepareDimensionsAndMeasures(\n    props.dimensions,\n    props.measures,\n    dimensionDefaults,\n    measureDefaults\n  );\n\n  const tooltipValueFormatter = useTooltipFormatter(measures);\n\n  const primaryDimension = dimensions[0];\n\n  const labelFormatter = useLabelFormatter(primaryDimension);\n\n  const primaryDimensionAccessor = primaryDimension?.accessor;\n\n  const onItemLegendClick = useLegendItemClick(onLegendClick);\n  const preventOnClickCall = useRef(false);\n  const onClickInternal = useCallback(\n    (payload, event) => {\n      if (typeof onClick === 'function' && !preventOnClickCall.current) {\n        onClick(\n          enrichEventWithDetails(event, {\n            payload: payload?.activePayload?.[0]?.payload,\n            activePayloads: payload?.activePayload\n          })\n        );\n      }\n      if (preventOnClickCall.current) {\n        preventOnClickCall.current = false;\n      }\n    },\n    [onClick, preventOnClickCall.current]\n  );\n\n  const onDataPointClickInternal = useCallback(\n    (payload, eventOrIndex) => {\n      if (eventOrIndex.value && onDataPointClick) {\n        onDataPointClick(\n          enrichEventWithDetails({} as any, {\n            value: eventOrIndex.value,\n            dataKey: eventOrIndex.dataKey,\n            name: eventOrIndex.payload.label,\n            dataIndex: eventOrIndex.index,\n            payload: eventOrIndex.payload\n          })\n        );\n        preventOnClickCall.current = true;\n      }\n    },\n    [onDataPointClick, preventOnClickCall.current]\n  );\n\n  const passThroughProps = usePassThroughHtmlProps(props, ['onDataPointClick', 'onLegendClick', 'onClick']);\n\n  return (\n    <ChartContainer\n      dataset={dataset}\n      ref={chartRef}\n      loading={loading}\n      Placeholder={ChartPlaceholder ?? PieChartPlaceholder}\n      style={style}\n      className={className}\n      tooltip={tooltip}\n      slot={slot}\n      resizeDebounce={chartConfig.resizeDebounce}\n      {...passThroughProps}\n    >\n      <RadarChartLib\n        onClick={onClickInternal}\n        data={dataset}\n        margin={chartConfig.margin}\n        className={typeof onDataPointClick === 'function' ? 'has-click-handler' : undefined}\n      >\n        <PolarGrid gridType={chartConfig.polarGridType} />\n        <PolarAngleAxis\n          dataKey={primaryDimensionAccessor}\n          tickFormatter={primaryDimension?.formatter}\n          tick={{\n            fill: ThemingParameters.sapContent_LabelColor\n          }}\n        />\n        <PolarRadiusAxis />\n        {measures.map((element, index) => {\n          return (\n            <Radar\n              key={element.accessor}\n              activeDot={{ onClick: onDataPointClickInternal } as any}\n              name={element.label ?? element.accessor}\n              dataKey={element.accessor}\n              stroke={element.color ?? `var(--sapChart_OrderedColor_${(index % 11) + 1})`}\n              fill={element.color ?? `var(--sapChart_OrderedColor_${(index % 11) + 1})`}\n              fillOpacity={element.opacity}\n              label={<ChartDataLabel config={element} chartType=\"radar\" position={'outside'} />}\n              isAnimationActive={noAnimation === false}\n            />\n          );\n        })}\n        <Tooltip\n          cursor={tooltipFillOpacity}\n          formatter={tooltipValueFormatter}\n          contentStyle={tooltipContentStyle}\n          labelFormatter={labelFormatter}\n          {...tooltipConfig}\n        />\n        {!noLegend && (\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          <Legend\n            verticalAlign={chartConfig.legendPosition}\n            align={chartConfig.legendHorizontalAlign}\n            onClick={onItemLegendClick}\n          />\n        )}\n        {props.children}\n      </RadarChartLib>\n    </ChartContainer>\n  );\n});\n\nRadarChart.defaultProps = {\n  noLegend: false,\n  noAnimation: false\n};\n\nRadarChart.displayName = 'RadarChart';\n\nexport { RadarChart };\n"],"names":["useLabelFormatter","primaryDimension","useCallback","name","formatter","usePrepareDimensionsAndMeasures","rawDimensions","rawMeasures","dimensionDefaults","measureDefaults","dimensions","useMemo","map","label","measures","value","useTooltipFormatter","props","measure","find","accessor","dataKey","defaultFormatter","d","tooltipContentStyle","backgroundColor","ThemingParameters","sapBackgroundColor","tooltipFillOpacity","fillOpacity","opacity","RadarChart","forwardRef","ref","loading","dataset","noLegend","noAnimation","tooltipConfig","onDataPointClick","onLegendClick","onClick","style","className","tooltip","slot","ChartPlaceholder","chartConfig","legendPosition","legendHorizontalAlign","dataLabel","polarGridType","resizeDebounce","chartRef","useConsolidatedRef","tooltipValueFormatter","labelFormatter","primaryDimensionAccessor","onItemLegendClick","useLegendItemClick","preventOnClickCall","useRef","onClickInternal","payload","event","current","enrichEventWithDetails","activePayload","activePayloads","onDataPointClickInternal","eventOrIndex","dataIndex","index","passThroughProps","usePassThroughHtmlProps","PieChartPlaceholder","RadarChartLib","margin","undefined","fill","sapContent_LabelColor","element","color","children","defaultProps","displayName"],"mappings":"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"}