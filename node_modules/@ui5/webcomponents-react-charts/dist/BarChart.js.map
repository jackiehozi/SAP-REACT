{"version":3,"file":"BarChart.js","sources":["../src/hooks/useCancelAnimationFallback.ts","../src/hooks/useChartMargin.ts","../src/hooks/useLabelFormatter.ts","../src/internal/defaults.ts","../src/hooks/useLongestYAxisLabelBar.ts","../src/hooks/useObserveXAxisHeights.ts","../src/hooks/useOnClickInternal.ts","../src/hooks/usePrepareDimensionsAndMeasures.ts","../src/hooks/useTooltipFormatter.ts","../src/internal/staticProps.ts","../src/components/BarChart/BarChart.tsx"],"sourcesContent":["import { debounce } from '@ui5/webcomponents-react-base/dist/Utils';\nimport { useRef, useState } from 'react';\n\nexport const useCancelAnimationFallback = (\n  noAnimation: boolean\n): { isMounted: boolean; handleBarAnimationStart: () => void; handleBarAnimationEnd: () => void } => {\n  const [isMounted, setIsMounted] = useState(true);\n  const cancelAnimationFallback = () => {\n    setIsMounted(false);\n    setIsMounted(true);\n  };\n  const debouncedCancelAnimationFallback = useRef(debounce(cancelAnimationFallback, 1500)).current;\n\n  const handleBarAnimationStart = () => {\n    if (!noAnimation) {\n      debouncedCancelAnimationFallback();\n    }\n  };\n  const handleBarAnimationEnd = () => {\n    if (!noAnimation) {\n      debouncedCancelAnimationFallback.cancel();\n    }\n  };\n  return { isMounted, handleBarAnimationStart, handleBarAnimationEnd };\n};\n","import { useMemo } from 'react';\n\nexport const useChartMargin = (margin, hasZoomingTool) =>\n  useMemo(() => {\n    return {\n      right: margin?.right ?? 30,\n      top: margin?.top ?? hasZoomingTool ? 40 : 20,\n      bottom: margin?.bottom ?? 20,\n      left: margin?.left ?? 10\n    };\n  }, [margin, hasZoomingTool]);\n","import { useCallback } from 'react';\n\nexport const useLabelFormatter = (primaryDimension) => {\n  return useCallback(\n    (name) => {\n      if (primaryDimension && typeof primaryDimension.formatter === 'function') {\n        return primaryDimension.formatter(name);\n      }\n      return name;\n    },\n    [primaryDimension]\n  );\n};\n","export const defaultFormatter = (d) => d;\n\nexport const defaultMaxYAxisWidth = 200;\n","import { getTextWidth } from '@ui5/webcomponents-react-charts/dist/Utils';\nimport { useMemo } from 'react';\nimport { getValueByDataKey } from 'recharts/lib/util/ChartUtils';\nimport { defaultMaxYAxisWidth } from '../internal/defaults';\n\nexport const useLongestYAxisLabelBar = (dataset: unknown[], elements): [number[], object] =>\n  useMemo(() => {\n    let axisWidths = Array(elements.length).fill(0);\n    let marginLeft = 0;\n\n    if (dataset instanceof Array && elements) {\n      const resolveAllMeasureLabels = (item): string[] => {\n        return elements.map((elementConfig) =>\n          elementConfig.formatter(getValueByDataKey(item, elementConfig.accessor, ''))\n        );\n      };\n\n      const allFormattedDataLabels = dataset.map(resolveAllMeasureLabels);\n      allFormattedDataLabels.forEach((dimensionLabels) => {\n        dimensionLabels.forEach((label, dimensionIndex) => {\n          axisWidths[dimensionIndex] = Math.max(getTextWidth(label), axisWidths[dimensionIndex]);\n        });\n      });\n\n      axisWidths = axisWidths.map((length) => Math.min(defaultMaxYAxisWidth, length));\n      marginLeft = axisWidths.reduce((acc, val) => acc + val, 0);\n    }\n\n    return [axisWidths, { marginLeft, maxWidth: `calc(100% - ${marginLeft + 8}px)` }];\n  }, [dataset, elements]);\n","import { debounce } from '@ui5/webcomponents-react-base/dist/Utils';\nimport { RefObject, useEffect, useRef, useState } from 'react';\n\nconst defaultAxisHeight = 30;\n\nexport const useObserveXAxisHeights = (chartRef: RefObject<SVGElement>, axisCount) => {\n  const [xAxisHeights, setXAxisHeights] = useState(Array(axisCount).fill(defaultAxisHeight));\n  const mostRecentXAxisHeights = useRef<number[]>(xAxisHeights);\n\n  useEffect(() => {\n    const mutationObserver = new MutationObserver(\n      debounce(() => {\n        const defaultHeights = Array(axisCount).fill(defaultAxisHeight);\n        chartRef.current?.querySelectorAll<SVGGraphicsElement>('.xAxis').forEach((xAxis, index) => {\n          const currentAxisHeight = xAxis?.getBBox()?.height;\n          if (currentAxisHeight > 30) {\n            defaultHeights[index] = currentAxisHeight;\n          }\n        });\n\n        const arraysHaveTheSameLength = mostRecentXAxisHeights.current.length === defaultHeights.length;\n        const arrayContentIsIdentical = mostRecentXAxisHeights.current.every(\n          (value, index) => defaultHeights[index] === value\n        );\n        if (!(arraysHaveTheSameLength && arrayContentIsIdentical)) {\n          mostRecentXAxisHeights.current = defaultHeights;\n          setXAxisHeights(defaultHeights);\n        }\n      }, 75)\n    );\n\n    if (chartRef.current) {\n      mutationObserver.observe(chartRef.current, {\n        characterData: false,\n        characterDataOldValue: false,\n        attributes: false,\n        childList: true,\n        subtree: true\n      });\n    }\n    return () => {\n      mutationObserver.disconnect();\n    };\n  }, [chartRef, setXAxisHeights, mostRecentXAxisHeights]);\n\n  return xAxisHeights;\n};\n","import { enrichEventWithDetails } from '@ui5/webcomponents-react-base/dist/Utils';\nimport { useCallback } from 'react';\n\nexport const useOnClickInternal = (onClick) =>\n  useCallback(\n    (payload, event) => {\n      if (typeof onClick === 'function') {\n        onClick(\n          enrichEventWithDetails(event, {\n            payload: payload?.activePayload?.[0]?.payload,\n            activePayloads: payload?.activePayload\n          })\n        );\n      }\n    },\n    [onClick]\n  );\n","import { useMemo } from 'react';\n\nexport const usePrepareDimensionsAndMeasures = <DimensionConfig = any, MeasureConfig = any>(\n  rawDimensions,\n  rawMeasures,\n  dimensionDefaults = {},\n  measureDefaults = {}\n) => {\n  const dimensions: DimensionConfig = useMemo(\n    () =>\n      rawDimensions.map((label) => ({\n        ...dimensionDefaults,\n        ...label\n      })),\n    [rawDimensions, dimensionDefaults]\n  );\n\n  const measures: MeasureConfig = useMemo(\n    () =>\n      rawMeasures.map((value) => ({\n        ...measureDefaults,\n        ...value\n      })),\n    [rawMeasures, measureDefaults]\n  );\n\n  return { dimensions, measures };\n};\n","import { useCallback } from 'react';\n\nexport const useTooltipFormatter = (measures) => {\n  return useCallback(\n    (value, name, props) => {\n      const measure = measures.find(({ accessor }) => accessor === props.dataKey);\n      if (measure && typeof measure.formatter === 'function') {\n        return measure.formatter(value);\n      }\n      return value;\n    },\n    [measures]\n  );\n};\n","import { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\n\nexport const tickLineConfig = { stroke: 'transparent' };\nexport const tooltipContentStyle = { backgroundColor: ThemingParameters.sapBackgroundColor };\nexport const tooltipFillOpacity: any = { fillOpacity: 0.3 }; // we need type any due to recharts typing error\nexport const xAxisPadding = { left: 25, right: 25 };\n","import { useConsolidatedRef, useIsRTL, usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/dist/hooks';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/dist/ThemingParameters';\nimport { enrichEventWithDetails } from '@ui5/webcomponents-react-base/dist/Utils';\nimport { BarChartPlaceholder } from '@ui5/webcomponents-react-charts/dist/BarChartPlaceholder';\nimport { ChartContainer } from '@ui5/webcomponents-react-charts/dist/components/ChartContainer';\nimport { ChartDataLabel } from '@ui5/webcomponents-react-charts/dist/components/ChartDataLabel';\nimport { XAxisTicks } from '@ui5/webcomponents-react-charts/dist/components/XAxisTicks';\nimport { YAxisTicks } from '@ui5/webcomponents-react-charts/dist/components/YAxisTicks';\nimport { useLegendItemClick } from '@ui5/webcomponents-react-charts/dist/useLegendItemClick';\nimport { resolvePrimaryAndSecondaryMeasures, getCellColors } from '@ui5/webcomponents-react-charts/dist/Utils';\nimport React, { CSSProperties, FC, forwardRef, Ref, useCallback, useMemo } from 'react';\nimport {\n  Bar,\n  BarChart as BarChartLib,\n  Brush,\n  CartesianGrid,\n  Cell,\n  Label,\n  LabelList,\n  Legend,\n  ReferenceLine,\n  Tooltip,\n  XAxis,\n  YAxis\n} from 'recharts';\nimport { getValueByDataKey } from 'recharts/lib/util/ChartUtils';\nimport { useCancelAnimationFallback } from '../../hooks/useCancelAnimationFallback';\nimport { useChartMargin } from '../../hooks/useChartMargin';\nimport { useLabelFormatter } from '../../hooks/useLabelFormatter';\nimport { useLongestYAxisLabelBar } from '../../hooks/useLongestYAxisLabelBar';\nimport { useObserveXAxisHeights } from '../../hooks/useObserveXAxisHeights';\nimport { useOnClickInternal } from '../../hooks/useOnClickInternal';\nimport { usePrepareDimensionsAndMeasures } from '../../hooks/usePrepareDimensionsAndMeasures';\nimport { useTooltipFormatter } from '../../hooks/useTooltipFormatter';\nimport { IChartBaseProps } from '../../interfaces/IChartBaseProps';\nimport { IChartDimension } from '../../interfaces/IChartDimension';\nimport { IChartMeasure } from '../../interfaces/IChartMeasure';\nimport { defaultFormatter } from '../../internal/defaults';\nimport { tickLineConfig, tooltipContentStyle, tooltipFillOpacity } from '../../internal/staticProps';\n\nconst dimensionDefaults = {\n  formatter: defaultFormatter\n};\n\nconst measureDefaults = {\n  formatter: defaultFormatter,\n  opacity: 1\n};\n\nconst valueAccessor =\n  (attribute) =>\n  ({ payload }) => {\n    return getValueByDataKey(payload, attribute);\n  };\n\ninterface MeasureConfig extends IChartMeasure {\n  /**\n   * Bar Width\n   * @default auto\n   */\n  width?: number;\n  /**\n   * Bar Opacity\n   * @default 1\n   */\n  opacity?: number;\n  /**\n   * Bar Stack ID\n   * @default undefined\n   */\n  stackId?: string;\n  /**\n   * Highlight color of defined elements\n   * @param value {string | number} Current value of the highlighted measure\n   * @param measure {IChartMeasure} Current measure object\n   * @param dataElement {object} Current data element\n   */\n  highlightColor?: (value: number, measure: MeasureConfig, dataElement: Record<string, any>) => CSSProperties['color'];\n}\n\ninterface DimensionConfig extends IChartDimension {\n  /**\n   * Interval of dimension axis labels\n   * @default 0\n   */\n  interval?: number;\n}\n\nexport interface BarChartProps extends IChartBaseProps {\n  /**\n   * An array of config objects. Each object will define one dimension of the chart.\n   *\n   * #### Required Properties\n   * - `accessor`: string containing the path to the dataset key the dimension should display. Supports object structures by using <code>'parent.child'</code>.\n   *   Can also be a getter.\n   *\n   * #### Optional Properties\n   * - `formatter`: function will be called for each data label and allows you to format it according to your needs\n   * - `interval`: number that controls how many ticks are rendered on the x axis\n   *\n   */\n  dimensions: DimensionConfig[];\n  /**\n   * An array of config objects. Each object is defining one bar in the chart.\n   *\n   * #### Required properties\n   * - `accessor`: string containing the path to the dataset key this bar should display. Supports object structures by using <code>'parent.child'</code>.\n   *   Can also be a getter.\n   *\n   * #### Optional properties\n   *\n   * - `label`: Label to display in legends or tooltips. Falls back to the <code>accessor</code> if not present.\n   * - `color`: any valid CSS Color or CSS Variable. Defaults to the `sapChart_OrderedColor_` colors\n   * - `formatter`: function will be called for each data label and allows you to format it according to your needs\n   * - `hideDataLabel`: flag whether the data labels should be hidden in the chart for this bar.\n   * - `DataLabel`: a custom component to be used for the data label\n   * - `width`: bar width, defaults to `auto`\n   * - `opacity`: bar opacity, defaults to `1`\n   * - `stackId`: bars with the same stackId will be stacked\n   * - `highlightColor`: function will be called to define a custom color of a specific element which matches the\n   *    defined condition. Overwrites code>color</code> of the element.\n   *\n   */\n  measures: MeasureConfig[];\n}\n\n/**\n * A `BarChart` is a data visualization where each category is represented by a rectangle, with the width of the rectangle being proportional to the values being plotted.\n */\nconst BarChart: FC<BarChartProps> = forwardRef((props: BarChartProps, ref: Ref<HTMLDivElement>) => {\n  const {\n    loading,\n    dataset,\n    noLegend,\n    noAnimation,\n    tooltipConfig,\n    onDataPointClick,\n    onLegendClick,\n    onClick,\n    style,\n    className,\n    tooltip,\n    slot,\n    syncId,\n    ChartPlaceholder\n  } = props;\n\n  const chartConfig = useMemo(() => {\n    return {\n      margin: {},\n      yAxisVisible: true,\n      xAxisVisible: true,\n      gridStroke: ThemingParameters.sapList_BorderColor,\n      gridHorizontal: true,\n      gridVertical: false,\n      legendPosition: 'bottom',\n      legendHorizontalAlign: 'left',\n      barGap: 3,\n      zoomingTool: false,\n      resizeDebounce: 250,\n      ...props.chartConfig\n    };\n  }, [props.chartConfig]);\n\n  const { dimensions, measures } = usePrepareDimensionsAndMeasures(\n    props.dimensions,\n    props.measures,\n    dimensionDefaults,\n    measureDefaults\n  );\n\n  const tooltipValueFormatter = useTooltipFormatter(measures);\n\n  const primaryDimension = dimensions[0];\n  const { primaryMeasure, secondaryMeasure } = resolvePrimaryAndSecondaryMeasures(\n    measures,\n    chartConfig?.secondYAxis?.dataKey\n  );\n\n  const dataKeys = measures.map(({ accessor }) => accessor);\n  const colorSecondY = chartConfig.secondYAxis\n    ? dataKeys.findIndex((key) => key === chartConfig.secondYAxis?.dataKey)\n    : 0;\n\n  const chartRef = useConsolidatedRef<any>(ref);\n\n  const onItemLegendClick = useLegendItemClick(onLegendClick);\n  const labelFormatter = useLabelFormatter(primaryDimension);\n\n  const onDataPointClickInternal = useCallback(\n    (payload, i, event) => {\n      if (payload && onDataPointClick) {\n        const value = payload.value.length ? payload.value[1] - payload.value[0] : payload.value;\n        onDataPointClick(\n          enrichEventWithDetails(event, {\n            dataKey: Object.keys(payload)\n              .filter((key) => key !== 'value')\n              .find((key) => payload[key] === value),\n            value,\n            payload: payload.payload,\n            dataIndex: i\n          })\n        );\n      }\n    },\n    [onDataPointClick]\n  );\n\n  const onClickInternal = useOnClickInternal(onClick);\n\n  const isBigDataSet = dataset?.length > 30;\n  const primaryDimensionAccessor = primaryDimension?.accessor;\n\n  const [width, legendPosition] = useLongestYAxisLabelBar(dataset, dimensions);\n  const marginChart = useChartMargin(chartConfig.margin, chartConfig.zoomingTool);\n  const [xAxisHeight] = useObserveXAxisHeights(chartRef, 1);\n  const passThroughProps = usePassThroughHtmlProps(props, ['onDataPointClick', 'onLegendClick', 'onClick']);\n  const isRTL = useIsRTL(chartRef);\n\n  const { isMounted, handleBarAnimationStart, handleBarAnimationEnd } = useCancelAnimationFallback(noAnimation);\n\n  return (\n    <ChartContainer\n      dataset={dataset}\n      loading={loading}\n      Placeholder={ChartPlaceholder ?? BarChartPlaceholder}\n      ref={chartRef}\n      style={style}\n      className={className}\n      tooltip={tooltip}\n      slot={slot}\n      resizeDebounce={chartConfig.resizeDebounce}\n      {...passThroughProps}\n    >\n      <BarChartLib\n        syncId={syncId}\n        onClick={onClickInternal}\n        stackOffset=\"sign\"\n        margin={marginChart}\n        layout=\"vertical\"\n        data={dataset}\n        barGap={chartConfig.barGap}\n        className={\n          typeof onDataPointClick === 'function' || typeof onClick === 'function' ? 'has-click-handler' : undefined\n        }\n      >\n        <CartesianGrid\n          vertical={chartConfig.gridVertical}\n          horizontal={chartConfig.gridHorizontal}\n          stroke={chartConfig.gridStroke}\n        />\n        {chartConfig.xAxisVisible && (\n          <XAxis\n            interval={0}\n            type=\"number\"\n            tick={<XAxisTicks config={primaryMeasure} />}\n            axisLine={chartConfig.xAxisVisible}\n            tickLine={tickLineConfig}\n            tickFormatter={primaryMeasure?.formatter}\n            height={xAxisHeight}\n            reversed={isRTL}\n          />\n        )}\n        {chartConfig.secondYAxis?.dataKey && (\n          <XAxis\n            dataKey={chartConfig.secondYAxis.dataKey}\n            axisLine={{\n              stroke: chartConfig.secondYAxis.color ?? `var(--sapChart_OrderedColor_${(colorSecondY % 11) + 1})`\n            }}\n            tick={\n              <XAxisTicks\n                config={secondaryMeasure}\n                secondYAxisConfig={{\n                  color: chartConfig.secondYAxis.color ?? `var(--sapChart_OrderedColor_${(colorSecondY % 11) + 1})`\n                }}\n              />\n            }\n            tickLine={{\n              stroke: chartConfig.secondYAxis.color ?? `var(--sapChart_OrderedColor_${(colorSecondY % 11) + 1})`\n            }}\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            label={{ value: chartConfig.secondYAxis.name, offset: 2, angle: +90, position: 'center' }}\n            orientation=\"top\"\n            interval={0}\n            xAxisId=\"secondary\"\n            type=\"number\"\n          />\n        )}\n        {chartConfig.yAxisVisible &&\n          dimensions.map((dimension, index) => {\n            return (\n              <YAxis\n                interval={dimension?.interval ?? (isBigDataSet ? 'preserveStart' : 0)}\n                type=\"category\"\n                key={dimension.accessor}\n                dataKey={dimension.accessor}\n                tick={<YAxisTicks config={dimension} />}\n                tickLine={index < 1}\n                axisLine={index < 1}\n                yAxisId={index}\n                width={width[index]}\n                allowDuplicatedCategory={index === 0}\n                orientation={isRTL ? 'right' : 'left'}\n              />\n            );\n          })}\n        {isMounted &&\n          measures.map((element, index) => {\n            return (\n              <Bar\n                stackId={element.stackId}\n                fillOpacity={element.opacity}\n                key={element.accessor}\n                name={element.label ?? element.accessor}\n                strokeOpacity={element.opacity}\n                type=\"monotone\"\n                dataKey={element.accessor}\n                fill={element.color ?? `var(--sapChart_OrderedColor_${(index % 11) + 1})`}\n                stroke={element.color ?? `var(--sapChart_OrderedColor_${(index % 11) + 1})`}\n                barSize={element.width}\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore\n                onClick={onDataPointClickInternal}\n                isAnimationActive={noAnimation === false}\n                onAnimationStart={handleBarAnimationStart}\n                onAnimationEnd={handleBarAnimationEnd}\n              >\n                <LabelList\n                  data={dataset}\n                  valueAccessor={valueAccessor(element.accessor)}\n                  content={<ChartDataLabel config={element} chartType=\"bar\" position={'insideRight'} />}\n                />\n                {dataset.map((data, i) => {\n                  return (\n                    <Cell\n                      key={i}\n                      fill={getCellColors(element, data, index)}\n                      stroke={getCellColors(element, data, index)}\n                    />\n                  );\n                })}\n              </Bar>\n            );\n          })}\n        {!noLegend && (\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          <Legend\n            verticalAlign={chartConfig.legendPosition}\n            align={chartConfig.legendHorizontalAlign}\n            onClick={onItemLegendClick}\n            wrapperStyle={legendPosition}\n          />\n        )}\n        {chartConfig.referenceLine && (\n          <ReferenceLine stroke={chartConfig.referenceLine.color} x={chartConfig.referenceLine.value}>\n            <Label>{chartConfig.referenceLine.label}</Label>\n          </ReferenceLine>\n        )}\n        <Tooltip\n          cursor={tooltipFillOpacity}\n          formatter={tooltipValueFormatter}\n          contentStyle={tooltipContentStyle}\n          labelFormatter={labelFormatter}\n          {...tooltipConfig}\n        />\n        {chartConfig.zoomingTool && (\n          <Brush\n            y={10}\n            dataKey={primaryDimensionAccessor}\n            tickFormatter={primaryDimension.formatter}\n            stroke={ThemingParameters.sapObjectHeader_BorderColor}\n            travellerWidth={10}\n            height={20}\n          />\n        )}\n        {props.children}\n      </BarChartLib>\n    </ChartContainer>\n  );\n});\n\nBarChart.defaultProps = {\n  noLegend: false,\n  noAnimation: false\n};\n\nBarChart.displayName = 'BarChart';\n\nexport { BarChart };\n"],"names":["useCancelAnimationFallback","noAnimation","useState","isMounted","setIsMounted","cancelAnimationFallback","debouncedCancelAnimationFallback","useRef","debounce","current","handleBarAnimationStart","handleBarAnimationEnd","cancel","useChartMargin","margin","hasZoomingTool","useMemo","right","top","bottom","left","useLabelFormatter","primaryDimension","useCallback","name","formatter","defaultFormatter","d","defaultMaxYAxisWidth","useLongestYAxisLabelBar","dataset","elements","axisWidths","Array","length","fill","marginLeft","resolveAllMeasureLabels","item","map","elementConfig","getValueByDataKey","accessor","allFormattedDataLabels","forEach","dimensionLabels","label","dimensionIndex","Math","max","getTextWidth","min","reduce","acc","val","maxWidth","defaultAxisHeight","useObserveXAxisHeights","chartRef","axisCount","xAxisHeights","setXAxisHeights","mostRecentXAxisHeights","useEffect","mutationObserver","MutationObserver","defaultHeights","querySelectorAll","xAxis","index","currentAxisHeight","getBBox","height","arraysHaveTheSameLength","arrayContentIsIdentical","every","value","observe","characterData","characterDataOldValue","attributes","childList","subtree","disconnect","useOnClickInternal","onClick","payload","event","enrichEventWithDetails","activePayload","activePayloads","usePrepareDimensionsAndMeasures","rawDimensions","rawMeasures","dimensionDefaults","measureDefaults","dimensions","measures","useTooltipFormatter","props","measure","find","dataKey","tickLineConfig","stroke","tooltipContentStyle","backgroundColor","ThemingParameters","sapBackgroundColor","tooltipFillOpacity","fillOpacity","opacity","valueAccessor","attribute","BarChart","forwardRef","ref","loading","noLegend","tooltipConfig","onDataPointClick","onLegendClick","style","className","tooltip","slot","syncId","ChartPlaceholder","chartConfig","yAxisVisible","xAxisVisible","gridStroke","sapList_BorderColor","gridHorizontal","gridVertical","legendPosition","legendHorizontalAlign","barGap","zoomingTool","resizeDebounce","tooltipValueFormatter","resolvePrimaryAndSecondaryMeasures","secondYAxis","primaryMeasure","secondaryMeasure","dataKeys","colorSecondY","findIndex","key","useConsolidatedRef","onItemLegendClick","useLegendItemClick","labelFormatter","onDataPointClickInternal","i","Object","keys","filter","dataIndex","onClickInternal","isBigDataSet","primaryDimensionAccessor","width","marginChart","xAxisHeight","passThroughProps","usePassThroughHtmlProps","isRTL","useIsRTL","BarChartPlaceholder","BarChartLib","undefined","color","offset","angle","position","dimension","interval","element","stackId","data","getCellColors","referenceLine","sapObjectHeader_BorderColor","children","defaultProps","displayName"],"mappings":";;;;;;;;;;;;;;;;;AAGO,IAAMA,0BAA0B,GAAG,SAA7BA,0BAA6B,CACxCC,WADwC,EAE2D;AACnG,kBAAkCC,QAAQ,CAAC,IAAD,CAA1C;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AACA,MAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;AACpCD,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAA,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAHD;;AAIA,MAAME,gCAAgC,GAAGC,MAAM,CAACC,QAAQ,CAACH,uBAAD,EAA0B,IAA1B,CAAT,CAAN,CAAgDI,OAAzF;;AAEA,MAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;AACpC,QAAI,CAACT,WAAL,EAAkB;AAChBK,MAAAA,gCAAgC;AACjC;AACF,GAJD;;AAKA,MAAMK,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAClC,QAAI,CAACV,WAAL,EAAkB;AAChBK,MAAAA,gCAAgC,CAACM,MAAjC;AACD;AACF,GAJD;;AAKA,SAAO;AAAET,IAAAA,SAAS,EAATA,SAAF;AAAaO,IAAAA,uBAAuB,EAAvBA,uBAAb;AAAsCC,IAAAA,qBAAqB,EAArBA;AAAtC,GAAP;AACD,CArBM;;ACDA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD,EAASC,cAAT;AAAA,SAC5BC,OAAO,CAAC,YAAM;AAAA;;AACZ,WAAO;AACLC,MAAAA,KAAK,mBAAEH,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAEG,KAAV,yDAAmB,EADnB;AAELC,MAAAA,GAAG,EAAE,gBAAAJ,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEI,GAAR,qDAAeH,cAAf,IAAgC,EAAhC,GAAqC,EAFrC;AAGLI,MAAAA,MAAM,oBAAEL,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAEK,MAAV,2DAAoB,EAHrB;AAILC,MAAAA,IAAI,kBAAEN,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAEM,IAAV,uDAAkB;AAJjB,KAAP;AAMD,GAPM,EAOJ,CAACN,MAAD,EAASC,cAAT,CAPI,CADqB;AAAA,CAAvB;;ACAA,IAAMM,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,gBAAD,EAAsB;AACrD,SAAOC,WAAW,CAChB,UAACC,IAAD,EAAU;AACR,QAAIF,gBAAgB,IAAI,OAAOA,gBAAgB,CAACG,SAAxB,KAAsC,UAA9D,EAA0E;AACxE,aAAOH,gBAAgB,CAACG,SAAjB,CAA2BD,IAA3B,CAAP;AACD;;AACD,WAAOA,IAAP;AACD,GANe,EAOhB,CAACF,gBAAD,CAPgB,CAAlB;AASD,CAVM;;ACFA,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,CAAD;AAAA,SAAOA,CAAP;AAAA,CAAzB;AAEA,IAAMC,oBAAoB,GAAG,GAA7B;;ACGA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,OAAD,EAAqBC,QAArB;AAAA,SACrCf,OAAO,CAAC,YAAM;AACZ,QAAIgB,UAAU,GAAGC,KAAK,CAACF,QAAQ,CAACG,MAAV,CAAL,CAAuBC,IAAvB,CAA4B,CAA5B,CAAjB;AACA,QAAIC,UAAU,GAAG,CAAjB;;AAEA,QAAIN,OAAO,YAAYG,KAAnB,IAA4BF,QAAhC,EAA0C;AACxC,UAAMM,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,IAAD,EAAoB;AAClD,eAAOP,QAAQ,CAACQ,GAAT,CAAa,UAACC,aAAD;AAAA,iBAClBA,aAAa,CAACf,SAAd,CAAwBgB,iBAAiB,CAACH,IAAD,EAAOE,aAAa,CAACE,QAArB,EAA+B,EAA/B,CAAzC,CADkB;AAAA,SAAb,CAAP;AAGD,OAJD;;AAMA,UAAMC,sBAAsB,GAAGb,OAAO,CAACS,GAAR,CAAYF,uBAAZ,CAA/B;AACAM,MAAAA,sBAAsB,CAACC,OAAvB,CAA+B,UAACC,eAAD,EAAqB;AAClDA,QAAAA,eAAe,CAACD,OAAhB,CAAwB,UAACE,KAAD,EAAQC,cAAR,EAA2B;AACjDf,UAAAA,UAAU,CAACe,cAAD,CAAV,GAA6BC,IAAI,CAACC,GAAL,CAASC,YAAY,CAACJ,KAAD,CAArB,EAA8Bd,UAAU,CAACe,cAAD,CAAxC,CAA7B;AACD,SAFD;AAGD,OAJD;AAMAf,MAAAA,UAAU,GAAGA,UAAU,CAACO,GAAX,CAAe,UAACL,MAAD;AAAA,eAAYc,IAAI,CAACG,GAAL,CAASvB,oBAAT,EAA+BM,MAA/B,CAAZ;AAAA,OAAf,CAAb;AACAE,MAAAA,UAAU,GAAGJ,UAAU,CAACoB,MAAX,CAAkB,UAACC,GAAD,EAAMC,GAAN;AAAA,eAAcD,GAAG,GAAGC,GAApB;AAAA,OAAlB,EAA2C,CAA3C,CAAb;AACD;;AAED,WAAO,CAACtB,UAAD,EAAa;AAAEI,MAAAA,UAAU,EAAVA,UAAF;AAAcmB,MAAAA,QAAQ,wBAAiBnB,UAAU,GAAG,CAA9B;AAAtB,KAAb,CAAP;AACD,GAvBM,EAuBJ,CAACN,OAAD,EAAUC,QAAV,CAvBI,CAD8B;AAAA,CAAhC;;ACFP,IAAMyB,iBAAiB,GAAG,EAA1B;AAEO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,QAAD,EAAkCC,SAAlC,EAAgD;AACpF,kBAAwCzD,QAAQ,CAAC+B,KAAK,CAAC0B,SAAD,CAAL,CAAiBxB,IAAjB,CAAsBqB,iBAAtB,CAAD,CAAhD;AAAA;AAAA,MAAOI,YAAP;AAAA,MAAqBC,eAArB;;AACA,MAAMC,sBAAsB,GAAGvD,MAAM,CAAWqD,YAAX,CAArC;AAEAG,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMC,gBAAgB,GAAG,IAAIC,gBAAJ,CACvBzD,QAAQ,CAAC,YAAM;AAAA;;AACb,UAAM0D,cAAc,GAAGjC,KAAK,CAAC0B,SAAD,CAAL,CAAiBxB,IAAjB,CAAsBqB,iBAAtB,CAAvB;AACA,2BAAAE,QAAQ,CAACjD,OAAT,wEAAkB0D,gBAAlB,CAAuD,QAAvD,EAAiEvB,OAAjE,CAAyE,UAACwB,KAAD,EAAQC,KAAR,EAAkB;AAAA;;AACzF,YAAMC,iBAAiB,GAAGF,KAAH,aAAGA,KAAH,yCAAGA,KAAK,CAAEG,OAAP,EAAH,mDAAG,eAAkBC,MAA5C;;AACA,YAAIF,iBAAiB,GAAG,EAAxB,EAA4B;AAC1BJ,UAAAA,cAAc,CAACG,KAAD,CAAd,GAAwBC,iBAAxB;AACD;AACF,OALD;AAOA,UAAMG,uBAAuB,GAAGX,sBAAsB,CAACrD,OAAvB,CAA+ByB,MAA/B,KAA0CgC,cAAc,CAAChC,MAAzF;AACA,UAAMwC,uBAAuB,GAAGZ,sBAAsB,CAACrD,OAAvB,CAA+BkE,KAA/B,CAC9B,UAACC,KAAD,EAAQP,KAAR;AAAA,eAAkBH,cAAc,CAACG,KAAD,CAAd,KAA0BO,KAA5C;AAAA,OAD8B,CAAhC;;AAGA,UAAI,EAAEH,uBAAuB,IAAIC,uBAA7B,CAAJ,EAA2D;AACzDZ,QAAAA,sBAAsB,CAACrD,OAAvB,GAAiCyD,cAAjC;AACAL,QAAAA,eAAe,CAACK,cAAD,CAAf;AACD;AACF,KAjBO,EAiBL,EAjBK,CADe,CAAzB;;AAqBA,QAAIR,QAAQ,CAACjD,OAAb,EAAsB;AACpBuD,MAAAA,gBAAgB,CAACa,OAAjB,CAAyBnB,QAAQ,CAACjD,OAAlC,EAA2C;AACzCqE,QAAAA,aAAa,EAAE,KAD0B;AAEzCC,QAAAA,qBAAqB,EAAE,KAFkB;AAGzCC,QAAAA,UAAU,EAAE,KAH6B;AAIzCC,QAAAA,SAAS,EAAE,IAJ8B;AAKzCC,QAAAA,OAAO,EAAE;AALgC,OAA3C;AAOD;;AACD,WAAO,YAAM;AACXlB,MAAAA,gBAAgB,CAACmB,UAAjB;AACD,KAFD;AAGD,GAlCQ,EAkCN,CAACzB,QAAD,EAAWG,eAAX,EAA4BC,sBAA5B,CAlCM,CAAT;AAoCA,SAAOF,YAAP;AACD,CAzCM;;ACFA,IAAMwB,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,OAAD;AAAA,SAChC9D,WAAW,CACT,UAAC+D,OAAD,EAAUC,KAAV,EAAoB;AAClB,QAAI,OAAOF,OAAP,KAAmB,UAAvB,EAAmC;AAAA;;AACjCA,MAAAA,OAAO,CACLG,sBAAsB,CAACD,KAAD,EAAQ;AAC5BD,QAAAA,OAAO,EAAEA,OAAF,aAAEA,OAAF,gDAAEA,OAAO,CAAEG,aAAX,oFAAE,sBAAyB,CAAzB,CAAF,2DAAE,uBAA6BH,OADV;AAE5BI,QAAAA,cAAc,EAAEJ,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEG;AAFG,OAAR,CADjB,CAAP;AAMD;AACF,GAVQ,EAWT,CAACJ,OAAD,CAXS,CADqB;AAAA,CAA3B;;ACDA,IAAMM,+BAA+B,GAAG,SAAlCA,+BAAkC,CAC7CC,aAD6C,EAE7CC,WAF6C,EAK1C;AAAA,MAFHC,iBAEG,uEAFiB,EAEjB;AAAA,MADHC,eACG,uEADe,EACf;AACH,MAAMC,UAA2B,GAAGhF,OAAO,CACzC;AAAA,WACE4E,aAAa,CAACrD,GAAd,CAAkB,UAACO,KAAD;AAAA,6CACbgD,iBADa,GAEbhD,KAFa;AAAA,KAAlB,CADF;AAAA,GADyC,EAMzC,CAAC8C,aAAD,EAAgBE,iBAAhB,CANyC,CAA3C;AASA,MAAMG,QAAuB,GAAGjF,OAAO,CACrC;AAAA,WACE6E,WAAW,CAACtD,GAAZ,CAAgB,UAACqC,KAAD;AAAA,6CACXmB,eADW,GAEXnB,KAFW;AAAA,KAAhB,CADF;AAAA,GADqC,EAMrC,CAACiB,WAAD,EAAcE,eAAd,CANqC,CAAvC;AASA,SAAO;AAAEC,IAAAA,UAAU,EAAVA,UAAF;AAAcC,IAAAA,QAAQ,EAARA;AAAd,GAAP;AACD,CAzBM;;ACAA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACD,QAAD,EAAc;AAC/C,SAAO1E,WAAW,CAChB,UAACqD,KAAD,EAAQpD,IAAR,EAAc2E,KAAd,EAAwB;AACtB,QAAMC,OAAO,GAAGH,QAAQ,CAACI,IAAT,CAAc;AAAA,UAAG3D,QAAH,QAAGA,QAAH;AAAA,aAAkBA,QAAQ,KAAKyD,KAAK,CAACG,OAArC;AAAA,KAAd,CAAhB;;AACA,QAAIF,OAAO,IAAI,OAAOA,OAAO,CAAC3E,SAAf,KAA6B,UAA5C,EAAwD;AACtD,aAAO2E,OAAO,CAAC3E,SAAR,CAAkBmD,KAAlB,CAAP;AACD;;AACD,WAAOA,KAAP;AACD,GAPe,EAQhB,CAACqB,QAAD,CARgB,CAAlB;AAUD,CAXM;;ACAA,IAAMM,cAAc,GAAG;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAvB;AACA,IAAMC,mBAAmB,GAAG;AAAEC,EAAAA,eAAe,EAAEC,iBAAiB,CAACC;AAArC,CAA5B;AACA,IAAMC,kBAAuB,GAAG;AAAEC,EAAAA,WAAW,EAAE;AAAf,CAAhC;;ACoCP,IAAMhB,iBAAiB,GAAG;AACxBrE,EAAAA,SAAS,EAAEC;AADa,CAA1B;AAIA,IAAMqE,eAAe,GAAG;AACtBtE,EAAAA,SAAS,EAAEC,gBADW;AAEtBqF,EAAAA,OAAO,EAAE;AAFa,CAAxB;;AAKA,IAAMC,aAAa,GACjB,SADIA,aACJ,CAACC,SAAD;AAAA,SACA,gBAAiB;AAAA,QAAd3B,OAAc,QAAdA,OAAc;AACf,WAAO7C,iBAAiB,CAAC6C,OAAD,EAAU2B,SAAV,CAAxB;AACD,GAHD;AAAA,CADF;;AA6EA;AACA;AACA;IACMC,QAA2B,gBAAGC,UAAU,CAAC,UAAChB,KAAD,EAAuBiB,GAAvB,EAAoD;AAAA;;AACjG,MACEC,OADF,GAeIlB,KAfJ,CACEkB,OADF;AAAA,MAEEvF,OAFF,GAeIqE,KAfJ,CAEErE,OAFF;AAAA,MAGEwF,QAHF,GAeInB,KAfJ,CAGEmB,QAHF;AAAA,MAIErH,WAJF,GAeIkG,KAfJ,CAIElG,WAJF;AAAA,MAKEsH,aALF,GAeIpB,KAfJ,CAKEoB,aALF;AAAA,MAMEC,gBANF,GAeIrB,KAfJ,CAMEqB,gBANF;AAAA,MAOEC,aAPF,GAeItB,KAfJ,CAOEsB,aAPF;AAAA,MAQEpC,OARF,GAeIc,KAfJ,CAQEd,OARF;AAAA,MASEqC,KATF,GAeIvB,KAfJ,CASEuB,KATF;AAAA,MAUEC,SAVF,GAeIxB,KAfJ,CAUEwB,SAVF;AAAA,MAWEC,OAXF,GAeIzB,KAfJ,CAWEyB,OAXF;AAAA,MAYEC,IAZF,GAeI1B,KAfJ,CAYE0B,IAZF;AAAA,MAaEC,MAbF,GAeI3B,KAfJ,CAaE2B,MAbF;AAAA,MAcEC,gBAdF,GAeI5B,KAfJ,CAcE4B,gBAdF;AAiBA,MAAMC,WAAW,GAAGhH,OAAO,CAAC,YAAM;AAChC;AACEF,MAAAA,MAAM,EAAE,EADV;AAEEmH,MAAAA,YAAY,EAAE,IAFhB;AAGEC,MAAAA,YAAY,EAAE,IAHhB;AAIEC,MAAAA,UAAU,EAAExB,iBAAiB,CAACyB,mBAJhC;AAKEC,MAAAA,cAAc,EAAE,IALlB;AAMEC,MAAAA,YAAY,EAAE,KANhB;AAOEC,MAAAA,cAAc,EAAE,QAPlB;AAQEC,MAAAA,qBAAqB,EAAE,MARzB;AASEC,MAAAA,MAAM,EAAE,CATV;AAUEC,MAAAA,WAAW,EAAE,KAVf;AAWEC,MAAAA,cAAc,EAAE;AAXlB,OAYKxC,KAAK,CAAC6B,WAZX;AAcD,GAf0B,EAexB,CAAC7B,KAAK,CAAC6B,WAAP,CAfwB,CAA3B;;AAiBA,8BAAiCrC,+BAA+B,CAC9DQ,KAAK,CAACH,UADwD,EAE9DG,KAAK,CAACF,QAFwD,EAG9DH,iBAH8D,EAI9DC,eAJ8D,CAAhE;AAAA,MAAQC,UAAR,yBAAQA,UAAR;AAAA,MAAoBC,QAApB,yBAAoBA,QAApB;;AAOA,MAAM2C,qBAAqB,GAAG1C,mBAAmB,CAACD,QAAD,CAAjD;AAEA,MAAM3E,gBAAgB,GAAG0E,UAAU,CAAC,CAAD,CAAnC;;AACA,8BAA6C6C,kCAAkC,CAC7E5C,QAD6E,EAE7E+B,WAF6E,aAE7EA,WAF6E,gDAE7EA,WAAW,CAAEc,WAFgE,0DAE7E,sBAA0BxC,OAFmD,CAA/E;AAAA,MAAQyC,cAAR,yBAAQA,cAAR;AAAA,MAAwBC,gBAAxB,yBAAwBA,gBAAxB;;AAKA,MAAMC,QAAQ,GAAGhD,QAAQ,CAAC1D,GAAT,CAAa;AAAA,QAAGG,QAAH,SAAGA,QAAH;AAAA,WAAkBA,QAAlB;AAAA,GAAb,CAAjB;AACA,MAAMwG,YAAY,GAAGlB,WAAW,CAACc,WAAZ,GACjBG,QAAQ,CAACE,SAAT,CAAmB,UAACC,GAAD;AAAA;;AAAA,WAASA,GAAG,gCAAKpB,WAAW,CAACc,WAAjB,2DAAK,uBAAyBxC,OAA9B,CAAZ;AAAA,GAAnB,CADiB,GAEjB,CAFJ;AAIA,MAAM5C,QAAQ,GAAG2F,kBAAkB,CAAMjC,GAAN,CAAnC;AAEA,MAAMkC,iBAAiB,GAAGC,kBAAkB,CAAC9B,aAAD,CAA5C;AACA,MAAM+B,cAAc,GAAGnI,iBAAiB,CAACC,gBAAD,CAAxC;AAEA,MAAMmI,wBAAwB,GAAGlI,WAAW,CAC1C,UAAC+D,OAAD,EAAUoE,CAAV,EAAanE,KAAb,EAAuB;AACrB,QAAID,OAAO,IAAIkC,gBAAf,EAAiC;AAC/B,UAAM5C,MAAK,GAAGU,OAAO,CAACV,KAAR,CAAc1C,MAAd,GAAuBoD,OAAO,CAACV,KAAR,CAAc,CAAd,IAAmBU,OAAO,CAACV,KAAR,CAAc,CAAd,CAA1C,GAA6DU,OAAO,CAACV,KAAnF;;AACA4C,MAAAA,gBAAgB,CACdhC,sBAAsB,CAACD,KAAD,EAAQ;AAC5Be,QAAAA,OAAO,EAAEqD,MAAM,CAACC,IAAP,CAAYtE,OAAZ,EACNuE,MADM,CACC,UAACT,GAAD;AAAA,iBAASA,GAAG,KAAK,OAAjB;AAAA,SADD,EAEN/C,IAFM,CAED,UAAC+C,GAAD;AAAA,iBAAS9D,OAAO,CAAC8D,GAAD,CAAP,KAAiBxE,MAA1B;AAAA,SAFC,CADmB;AAI5BA,QAAAA,KAAK,EAALA,MAJ4B;AAK5BU,QAAAA,OAAO,EAAEA,OAAO,CAACA,OALW;AAM5BwE,QAAAA,SAAS,EAAEJ;AANiB,OAAR,CADR,CAAhB;AAUD;AACF,GAfyC,EAgB1C,CAAClC,gBAAD,CAhB0C,CAA5C;AAmBA,MAAMuC,eAAe,GAAG3E,kBAAkB,CAACC,OAAD,CAA1C;AAEA,MAAM2E,YAAY,GAAG,CAAAlI,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEI,MAAT,IAAkB,EAAvC;AACA,MAAM+H,wBAAwB,GAAG3I,gBAAH,aAAGA,gBAAH,uBAAGA,gBAAgB,CAAEoB,QAAnD;;AAEA,8BAAgCb,uBAAuB,CAACC,OAAD,EAAUkE,UAAV,CAAvD;AAAA;AAAA,MAAOkE,KAAP;AAAA,MAAc3B,cAAd;;AACA,MAAM4B,WAAW,GAAGtJ,cAAc,CAACmH,WAAW,CAAClH,MAAb,EAAqBkH,WAAW,CAACU,WAAjC,CAAlC;;AACA,8BAAsBjF,sBAAsB,CAACC,QAAD,EAAW,CAAX,CAA5C;AAAA;AAAA,MAAO0G,WAAP;;AACA,MAAMC,gBAAgB,GAAGC,uBAAuB,CAACnE,KAAD,EAAQ,CAAC,kBAAD,EAAqB,eAArB,EAAsC,SAAtC,CAAR,CAAhD;AACA,MAAMoE,KAAK,GAAGC,QAAQ,CAAC9G,QAAD,CAAtB;;AAEA,8BAAsE1D,0BAA0B,CAACC,WAAD,CAAhG;AAAA,MAAQE,SAAR,yBAAQA,SAAR;AAAA,MAAmBO,uBAAnB,yBAAmBA,uBAAnB;AAAA,MAA4CC,qBAA5C,yBAA4CA,qBAA5C;;AAEA,sBACE,oBAAC,cAAD;AACE,IAAA,OAAO,EAAEmB,OADX;AAEE,IAAA,OAAO,EAAEuF,OAFX;AAGE,IAAA,WAAW,EAAEU,gBAAF,aAAEA,gBAAF,cAAEA,gBAAF,GAAsB0C,mBAHnC;AAIE,IAAA,GAAG,EAAE/G,QAJP;AAKE,IAAA,KAAK,EAAEgE,KALT;AAME,IAAA,SAAS,EAAEC,SANb;AAOE,IAAA,OAAO,EAAEC,OAPX;AAQE,IAAA,IAAI,EAAEC,IARR;AASE,IAAA,cAAc,EAAEG,WAAW,CAACW;AAT9B,KAUM0B,gBAVN,gBAYE,oBAACK,UAAD;AACE,IAAA,MAAM,EAAE5C,MADV;AAEE,IAAA,OAAO,EAAEiC,eAFX;AAGE,IAAA,WAAW,EAAC,MAHd;AAIE,IAAA,MAAM,EAAEI,WAJV;AAKE,IAAA,MAAM,EAAC,UALT;AAME,IAAA,IAAI,EAAErI,OANR;AAOE,IAAA,MAAM,EAAEkG,WAAW,CAACS,MAPtB;AAQE,IAAA,SAAS,EACP,OAAOjB,gBAAP,KAA4B,UAA5B,IAA0C,OAAOnC,OAAP,KAAmB,UAA7D,GAA0E,mBAA1E,GAAgGsF;AATpG,kBAYE,oBAAC,aAAD;AACE,IAAA,QAAQ,EAAE3C,WAAW,CAACM,YADxB;AAEE,IAAA,UAAU,EAAEN,WAAW,CAACK,cAF1B;AAGE,IAAA,MAAM,EAAEL,WAAW,CAACG;AAHtB,IAZF,EAiBGH,WAAW,CAACE,YAAZ,iBACC,oBAAC,KAAD;AACE,IAAA,QAAQ,EAAE,CADZ;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,IAAI,eAAE,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAEa;AAApB,MAHR;AAIE,IAAA,QAAQ,EAAEf,WAAW,CAACE,YAJxB;AAKE,IAAA,QAAQ,EAAE3B,cALZ;AAME,IAAA,aAAa,EAAEwC,cAAF,aAAEA,cAAF,uBAAEA,cAAc,CAAEtH,SANjC;AAOE,IAAA,MAAM,EAAE2I,WAPV;AAQE,IAAA,QAAQ,EAAEG;AARZ,IAlBJ,EA6BG,2BAAAvC,WAAW,CAACc,WAAZ,kFAAyBxC,OAAzB,kBACC,oBAAC,KAAD;AACE,IAAA,OAAO,EAAE0B,WAAW,CAACc,WAAZ,CAAwBxC,OADnC;AAEE,IAAA,QAAQ,EAAE;AACRE,MAAAA,MAAM,4BAAEwB,WAAW,CAACc,WAAZ,CAAwB8B,KAA1B,iHAAmE1B,YAAY,GAAG,EAAhB,GAAsB,CAAxF;AADE,KAFZ;AAKE,IAAA,IAAI,eACF,oBAAC,UAAD;AACE,MAAA,MAAM,EAAEF,gBADV;AAEE,MAAA,iBAAiB,EAAE;AACjB4B,QAAAA,KAAK,4BAAE5C,WAAW,CAACc,WAAZ,CAAwB8B,KAA1B,iHAAmE1B,YAAY,GAAG,EAAhB,GAAsB,CAAxF;AADY;AAFrB,MANJ;AAaE,IAAA,QAAQ,EAAE;AACR1C,MAAAA,MAAM,4BAAEwB,WAAW,CAACc,WAAZ,CAAwB8B,KAA1B,iHAAmE1B,YAAY,GAAG,EAAhB,GAAsB,CAAxF;AADE,KAbZ;AAiBE;AAjBF;AAkBE,IAAA,KAAK,EAAE;AAAEtE,MAAAA,KAAK,EAAEoD,WAAW,CAACc,WAAZ,CAAwBtH,IAAjC;AAAuCqJ,MAAAA,MAAM,EAAE,CAA/C;AAAkDC,MAAAA,KAAK,EAAE,CAAC,EAA1D;AAA8DC,MAAAA,QAAQ,EAAE;AAAxE,KAlBT;AAmBE,IAAA,WAAW,EAAC,KAnBd;AAoBE,IAAA,QAAQ,EAAE,CApBZ;AAqBE,IAAA,OAAO,EAAC,WArBV;AAsBE,IAAA,IAAI,EAAC;AAtBP,IA9BJ,EAuDG/C,WAAW,CAACC,YAAZ,IACCjC,UAAU,CAACzD,GAAX,CAAe,UAACyI,SAAD,EAAY3G,KAAZ,EAAsB;AAAA;;AACnC,wBACE,oBAAC,KAAD;AACE,MAAA,QAAQ,yBAAE2G,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEC,QAAb,qEAA0BjB,YAAY,GAAG,eAAH,GAAqB,CADrE;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,GAAG,EAAEgB,SAAS,CAACtI,QAHjB;AAIE,MAAA,OAAO,EAAEsI,SAAS,CAACtI,QAJrB;AAKE,MAAA,IAAI,eAAE,oBAAC,UAAD;AAAY,QAAA,MAAM,EAAEsI;AAApB,QALR;AAME,MAAA,QAAQ,EAAE3G,KAAK,GAAG,CANpB;AAOE,MAAA,QAAQ,EAAEA,KAAK,GAAG,CAPpB;AAQE,MAAA,OAAO,EAAEA,KARX;AASE,MAAA,KAAK,EAAE6F,KAAK,CAAC7F,KAAD,CATd;AAUE,MAAA,uBAAuB,EAAEA,KAAK,KAAK,CAVrC;AAWE,MAAA,WAAW,EAAEkG,KAAK,GAAG,OAAH,GAAa;AAXjC,MADF;AAeD,GAhBD,CAxDJ,EAyEGpK,SAAS,IACR8F,QAAQ,CAAC1D,GAAT,CAAa,UAAC2I,OAAD,EAAU7G,KAAV,EAAoB;AAAA;;AAC/B,wBACE,oBAAC,GAAD;AACE,MAAA,OAAO,EAAE6G,OAAO,CAACC,OADnB;AAEE,MAAA,WAAW,EAAED,OAAO,CAACnE,OAFvB;AAGE,MAAA,GAAG,EAAEmE,OAAO,CAACxI,QAHf;AAIE,MAAA,IAAI,oBAAEwI,OAAO,CAACpI,KAAV,2DAAmBoI,OAAO,CAACxI,QAJjC;AAKE,MAAA,aAAa,EAAEwI,OAAO,CAACnE,OALzB;AAME,MAAA,IAAI,EAAC,UANP;AAOE,MAAA,OAAO,EAAEmE,OAAO,CAACxI,QAPnB;AAQE,MAAA,IAAI,oBAAEwI,OAAO,CAACN,KAAV,iGAAmDvG,KAAK,GAAG,EAAT,GAAe,CAAjE,MARN;AASE,MAAA,MAAM,qBAAE6G,OAAO,CAACN,KAAV,mGAAmDvG,KAAK,GAAG,EAAT,GAAe,CAAjE,MATR;AAUE,MAAA,OAAO,EAAE6G,OAAO,CAAChB,KAVnB;AAYE;AAZF;AAaE,MAAA,OAAO,EAAET,wBAbX;AAcE,MAAA,iBAAiB,EAAExJ,WAAW,KAAK,KAdrC;AAeE,MAAA,gBAAgB,EAAES,uBAfpB;AAgBE,MAAA,cAAc,EAAEC;AAhBlB,oBAkBE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEmB,OADR;AAEE,MAAA,aAAa,EAAEkF,aAAa,CAACkE,OAAO,CAACxI,QAAT,CAF9B;AAGE,MAAA,OAAO,eAAE,oBAAC,cAAD;AAAgB,QAAA,MAAM,EAAEwI,OAAxB;AAAiC,QAAA,SAAS,EAAC,KAA3C;AAAiD,QAAA,QAAQ,EAAE;AAA3D;AAHX,MAlBF,EAuBGpJ,OAAO,CAACS,GAAR,CAAY,UAAC6I,IAAD,EAAO1B,CAAP,EAAa;AACxB,0BACE,oBAAC,IAAD;AACE,QAAA,GAAG,EAAEA,CADP;AAEE,QAAA,IAAI,EAAE2B,aAAa,CAACH,OAAD,EAAUE,IAAV,EAAgB/G,KAAhB,CAFrB;AAGE,QAAA,MAAM,EAAEgH,aAAa,CAACH,OAAD,EAAUE,IAAV,EAAgB/G,KAAhB;AAHvB,QADF;AAOD,KARA,CAvBH,CADF;AAmCD,GApCD,CA1EJ,EA+GG,CAACiD,QAAD;AAAA;AACC;AACA;AACA,sBAAC,MAAD;AACE,IAAA,aAAa,EAAEU,WAAW,CAACO,cAD7B;AAEE,IAAA,KAAK,EAAEP,WAAW,CAACQ,qBAFrB;AAGE,IAAA,OAAO,EAAEc,iBAHX;AAIE,IAAA,YAAY,EAAEf;AAJhB,IAlHJ,EAyHGP,WAAW,CAACsD,aAAZ,iBACC,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAEtD,WAAW,CAACsD,aAAZ,CAA0BV,KAAjD;AAAwD,IAAA,CAAC,EAAE5C,WAAW,CAACsD,aAAZ,CAA0B1G;AAArF,kBACE,oBAAC,KAAD,QAAQoD,WAAW,CAACsD,aAAZ,CAA0BxI,KAAlC,CADF,CA1HJ,eA8HE,oBAAC,OAAD;AACE,IAAA,MAAM,EAAE+D,kBADV;AAEE,IAAA,SAAS,EAAE+B,qBAFb;AAGE,IAAA,YAAY,EAAEnC,mBAHhB;AAIE,IAAA,cAAc,EAAE+C;AAJlB,KAKMjC,aALN,EA9HF,EAqIGS,WAAW,CAACU,WAAZ,iBACC,oBAAC,KAAD;AACE,IAAA,CAAC,EAAE,EADL;AAEE,IAAA,OAAO,EAAEuB,wBAFX;AAGE,IAAA,aAAa,EAAE3I,gBAAgB,CAACG,SAHlC;AAIE,IAAA,MAAM,EAAEkF,iBAAiB,CAAC4E,2BAJ5B;AAKE,IAAA,cAAc,EAAE,EALlB;AAME,IAAA,MAAM,EAAE;AANV,IAtIJ,EA+IGpF,KAAK,CAACqF,QA/IT,CAZF,CADF;AAgKD,CA5P6C;AA8P9CtE,QAAQ,CAACuE,YAAT,GAAwB;AACtBnE,EAAAA,QAAQ,EAAE,KADY;AAEtBrH,EAAAA,WAAW,EAAE;AAFS,CAAxB;AAKAiH,QAAQ,CAACwE,WAAT,GAAuB,UAAvB;;;;"}