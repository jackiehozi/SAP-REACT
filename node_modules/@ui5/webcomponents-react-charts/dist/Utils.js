import { getValueByDataKey } from 'recharts/lib/util/ChartUtils';

var getCellColors = function getCellColors(element, data, index) {
  var _ref, _element$highlightCol, _element$highlightCol2;

  return (_ref = (_element$highlightCol = (_element$highlightCol2 = element.highlightColor) === null || _element$highlightCol2 === void 0 ? void 0 : _element$highlightCol2.call(element, getValueByDataKey(data, element.accessor), element, data)) !== null && _element$highlightCol !== void 0 ? _element$highlightCol : element.color) !== null && _ref !== void 0 ? _ref : "var(--sapChart_OrderedColor_".concat(index % 11 + 1, ")");
};
var canvas;
var getTextWidth = function getTextWidth(text) {
  var font = "normal 12pt \"72\",\"72full\",Arial,Helvetica,sans-serif"; // re-use canvas object for better performance

  canvas = canvas || (canvas = document.createElement('canvas'));
  var context = canvas.getContext('2d');
  context.font = font;
  var metrics = context.measureText(text);
  return metrics.width;
};
var truncateLongLabel = function truncateLongLabel(value) {
  var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 13;

  if ((value === null || value === void 0 ? void 0 : value.length) > length) {
    return "".concat(value.slice(0, length - 2), "...");
  }

  return value;
};
var resolvePrimaryAndSecondaryMeasures = function resolvePrimaryAndSecondaryMeasures(measures, secondaryAxisDataKey) {
  var _measures$;

  var secondaryMeasure = measures.find(function (measure) {
    return measure.accessor === secondaryAxisDataKey;
  });
  var primaryMeasure = measures[0] === secondaryMeasure ? (_measures$ = measures[1]) !== null && _measures$ !== void 0 ? _measures$ : measures[0] : measures[0];
  return {
    primaryMeasure: primaryMeasure,
    secondaryMeasure: secondaryMeasure
  };
};

export { getCellColors, getTextWidth, resolvePrimaryAndSecondaryMeasures, truncateLongLabel };
//# sourceMappingURL=Utils.js.map
